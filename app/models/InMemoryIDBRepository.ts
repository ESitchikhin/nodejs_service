import {IInfoBlockDataRepository, TCharacteristic} from "./entities/entities";
import {
	TAllInfrastructures,
	TEntityMedia,
	TInputData, TPriceAdditional,
	TRealty,
	TRealtyObject,
	TRealtyOffer
} from "./entities/inputData";
import {
	TArea,
	TBrokerData,
	TBuilding,
	TCommercialParam,
	TCommercialTerms,
	TFeature,
	TMedia,
	TStoredData
} from "./entities/storedData";
import {unitFormat} from "../utils/unit-format";
import sharp from 'sharp';
import {getStringWidth, randomString, splitString} from "../utils/string-utils";
import {formattedDate} from "../utils/dates";
import axios, {AxiosRequestConfig} from "axios";
import path from "path";
import fs from "fs";

const infrastructureData = {
	cafe: {
		priority: 1,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M23.3686 20.4059L2.96276 0H2.10349L1.92804 0.445828C1.46496 1.62258 1.2671 2.82614 1.35593 3.92625C1.45718 5.18025 1.93357 6.26592 2.73368 7.06603L11.317 15.6493L12.4491 14.5172L20.3843 23.3903C21.1737 24.1797 22.5324 24.2265 23.3686 23.3903C24.1915 22.5675 24.1915 21.2287 23.3686 20.4059ZM7.33945 13.6611L0.617063 20.3835C-0.205688 21.2063 -0.205688 22.5451 0.617063 23.3678C1.39866 24.1494 2.75077 24.2184 3.60136 23.3678L10.3238 16.6454L7.33945 13.6611ZM19.1602 7.8095L22.9735 3.99622L23.9684 4.99104L18.9945 9.9649C18.386 10.5734 17.578 10.9368 16.7194 10.988C16.5019 11.001 16.2878 11.0503 16.0843 11.1322L12.8533 7.90114C12.9351 7.69761 12.9844 7.48362 12.9974 7.26608C13.0487 6.40742 13.4121 5.59948 14.0206 4.991L18.9945 0.0170898L19.9892 1.01182L16.1759 4.82511L17.1706 5.81989L20.9839 2.00661L21.9787 3.00139L18.1654 6.81472L19.1602 7.8095Z" fill="url(#paint0_linear)"/>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.49495" y1="19.5" x2="13.4164" y2="-5.02947" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	restaurant: {
		priority: 2,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M23.3686 20.4059L2.96276 0H2.10349L1.92804 0.445828C1.46496 1.62258 1.2671 2.82614 1.35593 3.92625C1.45718 5.18025 1.93357 6.26592 2.73368 7.06603L11.317 15.6493L12.4491 14.5172L20.3843 23.3903C21.1737 24.1797 22.5324 24.2265 23.3686 23.3903C24.1915 22.5675 24.1915 21.2287 23.3686 20.4059ZM7.33945 13.6611L0.617063 20.3835C-0.205688 21.2063 -0.205688 22.5451 0.617063 23.3678C1.39866 24.1494 2.75077 24.2184 3.60136 23.3678L10.3238 16.6454L7.33945 13.6611ZM19.1602 7.8095L22.9735 3.99622L23.9684 4.99104L18.9945 9.9649C18.386 10.5734 17.578 10.9368 16.7194 10.988C16.5019 11.001 16.2878 11.0503 16.0843 11.1322L12.8533 7.90114C12.9351 7.69761 12.9844 7.48362 12.9974 7.26608C13.0487 6.40742 13.4121 5.59948 14.0206 4.991L18.9945 0.0170898L19.9892 1.01182L16.1759 4.82511L17.1706 5.81989L20.9839 2.00661L21.9787 3.00139L18.1654 6.81472L19.1602 7.8095Z" fill="url(#paint0_linear)"/>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.49495" y1="19.5" x2="13.4164" y2="-5.02947" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	fastfood: {
		priority: 7,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M18.3225 6.85619H23.276C23.6758 6.85619 24 7.18034 24 7.58013V9.86522H16.9514C16.4395 9.16276 15.759 8.52633 14.9235 7.9802C14.2181 7.51912 13.4256 7.14197 12.5737 6.85614H16.8745V1.37389C16.8745 0.974054 17.1987 0.649902 17.5985 0.649902C17.9983 0.649902 18.3225 0.974054 18.3225 1.37389V6.85619ZM17.9374 13.9571C18.0228 13.7242 18.0695 13.4729 18.0695 13.2108C18.0695 12.5552 17.9543 11.9191 17.7317 11.3135H23.2457L22.7785 22.6557C22.7625 23.0436 22.4434 23.3499 22.0552 23.3499H16.3049C17.3819 22.3542 18.0575 20.9303 18.0575 19.3514V18.2959C18.0575 18.0386 18.0125 17.7914 17.9299 17.5621C18.2758 17.0439 18.4776 16.4218 18.4776 15.7534C18.4776 15.0902 18.2783 14.4729 17.9374 13.9571ZM0.420044 19.3516C0.420044 21.5599 2.21022 23.35 4.41847 23.35H12.6111C14.8194 23.35 16.6096 21.5598 16.6096 19.3515C16.6096 19.1684 16.4611 19.02 16.2781 19.02H0.751532C0.568461 19.02 0.420044 19.1684 0.420044 19.3516ZM11.8815 13.9346H15.2111C16.2155 13.9346 17.0297 14.7488 17.0297 15.7531C17.0297 16.7575 16.2155 17.5717 15.2111 17.5717H1.81855C0.814193 17.5717 0 16.7575 0 15.7531C0 14.7488 0.814193 13.9346 1.81855 13.9346H5.04328L7.18154 16.5895C7.32431 16.7668 7.53393 16.8594 7.74586 16.8594C7.89737 16.8594 8.05004 16.8121 8.18016 16.7143L11.8815 13.9346ZM7.87024 15.1362L9.47025 13.9346H6.90247L7.87024 15.1362ZM8.51485 7.66113C10.6259 7.66113 12.6205 8.20499 14.1313 9.19255C15.3288 9.97532 16.125 10.968 16.4525 12.0615C16.516 12.2736 16.3556 12.4869 16.1342 12.4869H0.895487C0.674044 12.4869 0.513609 12.2736 0.577126 12.0615C0.904657 10.968 1.7008 9.97532 2.89832 9.19255C4.40913 8.20499 6.4038 7.66113 8.51485 7.66113Z" fill="url(#paint0_linear)"/>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.49999" y1="19.0937" x2="12.0619" y2="-5.25763" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	bar: {
		priority: 8,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M7.23281 0H2.50781V1.40625H6.22031L7.62656 5.625H5.01099L6.05161 8.4375H8.56875L7.62656 5.625H9.10312L7.23281 0ZM15.8672 14.7656C15.8672 14.0899 15.7244 13.4122 15.4552 12.8066L15.4539 12.8052C15.1215 12.063 15.0515 11.171 15.2465 10.2317C15.264 10.1507 15.2875 10.0722 15.3111 9.99347L15.3111 9.99345L15.3111 9.99342L15.3112 9.9934C15.326 9.9438 15.3409 9.89413 15.3543 9.84375H6.52962C6.80117 10.8533 6.75495 11.9524 6.35168 12.9968C6.0221 13.8607 5.93693 14.7897 6.10451 15.6795C6.45556 17.5923 8.04987 19.3203 10.2422 19.6226V22.5937H6.72659V24H15.1641V22.5937H11.6485V19.6206C14.1542 19.2562 15.8672 17.1395 15.8672 14.7656ZM15.8391 8.4375L16.8797 5.625H9.10315L10.0453 8.4375H15.8391ZM12.1422 4.21875C12.9354 2.56195 14.6145 1.40625 16.5704 1.40625C19.284 1.40625 21.4923 3.61448 21.4923 6.32812C21.4923 8.02275 20.6381 9.57666 19.2085 10.4858C18.4064 10.9959 17.5042 11.2528 16.5772 11.2528C16.5753 11.2528 16.5734 11.2524 16.5715 11.2521C16.5695 11.2517 16.5676 11.2514 16.5657 11.2514C16.5646 11.0181 16.5686 10.7816 16.6212 10.5284C16.6706 10.299 16.7283 10.0697 16.8038 9.86231L18.9022 4.21875H12.1422Z" fill="url(#paint0_linear)"/>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-4.21585" y1="19.5" x2="17.6748" y2="0.103412" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	groceryStore: {
		priority: 12,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<path d="M7.2 19.2C5.88 19.2 4.8 20.28 4.8 21.6C4.8 22.92 5.88 24 7.2 24C8.52 24 9.6 22.92 9.6 21.6C9.6 20.28 8.52 19.2 7.2 19.2ZM0 0V2.4H2.4L6.72 11.52L5.04 14.4C4.92 14.76 4.8 15.24 4.8 15.6C4.8 16.92 5.88 18 7.2 18H21.6V15.6H7.68C7.56 15.6 7.44 15.48 7.44 15.36V15.24L8.52 13.2H17.4C18.36 13.2 19.08 12.72 19.44 12L23.76 4.2C24 3.96 24 3.84 24 3.6C24 2.88 23.52 2.4 22.8 2.4H5.04L3.96 0H0ZM19.2 19.2C17.88 19.2 16.8 20.28 16.8 21.6C16.8 22.92 17.88 24 19.2 24C20.52 24 21.6 22.92 21.6 21.6C21.6 20.28 20.52 19.2 19.2 19.2Z" fill="url(#paint0_linear)"/>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.5" y1="19.5" x2="13.4099" y2="-5.04242" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	groceryMarket: {
		priority: 13,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<path d="M7.2 19.2C5.88 19.2 4.8 20.28 4.8 21.6C4.8 22.92 5.88 24 7.2 24C8.52 24 9.6 22.92 9.6 21.6C9.6 20.28 8.52 19.2 7.2 19.2ZM0 0V2.4H2.4L6.72 11.52L5.04 14.4C4.92 14.76 4.8 15.24 4.8 15.6C4.8 16.92 5.88 18 7.2 18H21.6V15.6H7.68C7.56 15.6 7.44 15.48 7.44 15.36V15.24L8.52 13.2H17.4C18.36 13.2 19.08 12.72 19.44 12L23.76 4.2C24 3.96 24 3.84 24 3.6C24 2.88 23.52 2.4 22.8 2.4H5.04L3.96 0H0ZM19.2 19.2C17.88 19.2 16.8 20.28 16.8 21.6C16.8 22.92 17.88 24 19.2 24C20.52 24 21.6 22.92 21.6 21.6C21.6 20.28 20.52 19.2 19.2 19.2Z" fill="url(#paint0_linear)"/>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.5" y1="19.5" x2="13.4099" y2="-5.04242" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	tradeCenter: {
		priority: 5,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M4.70312 4.74829V2.68213L12.5348 3.66107L7.48717 5.09633L4.70312 4.74829ZM19.5001 6.59832L10.9762 5.5328L19.5001 3.36572V6.59832ZM4.70312 6.16553V17.3458H22.7031V8.41553L4.70312 6.16553ZM1.29688 17.3458V5.73975L3.29689 5.98973V17.3458H1.29688ZM0 18.7524H24V21.3179H0V18.7524ZM7.60994 15.0001H8.83494V11.0451H10.3539V9.99512H6.09094V11.0451H7.60994V15.0001ZM10.9683 15.0001H12.1933V13.4531H13.0473C14.0203 13.4531 14.6783 12.7251 14.6783 11.7171C14.6783 10.7091 14.0203 9.99512 13.0473 9.99512H10.9683V15.0001ZM12.1933 12.4031V11.0451H12.8163C13.2223 11.0451 13.4323 11.3181 13.4323 11.7171C13.4323 12.1161 13.2223 12.4031 12.7953 12.4031H12.1933ZM19.0603 15.0001H15.3433V9.99512H16.5683V13.9571H18.3043V9.99512H19.5293V13.9571H20.1453V15.9801H19.0603V15.0001Z" fill="url(#paint0_linear)"/>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.5" y1="17.8237" x2="7.53381" y2="-5.30653" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	cinema: {
		priority: 6,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<g clip-path="url(#clip0)">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M9.28864 6.2228C9.28521 8.78715 7.20962 10.8606 4.64447 10.8606C2.07719 10.8606 -0.0285529 8.78372 0.000292874 6.21644C0.000292874 3.64916 2.07719 1.57227 4.64447 1.57227C7.20962 1.57227 9.28521 3.64573 9.28864 6.21008C9.29207 3.64573 11.3677 1.57227 13.9328 1.57227C16.5001 1.57227 18.577 3.64916 18.577 6.21644C18.577 8.78372 16.5001 10.8606 13.9328 10.8606C11.3677 10.8606 9.29207 8.78715 9.28864 6.2228ZM6.54829 6.21644C6.54829 5.17799 5.71176 4.31262 4.64447 4.31262C3.57717 4.31262 2.7118 5.14915 2.74064 6.21644C2.74064 7.25489 3.60602 8.12027 4.64447 8.12027C5.68292 8.12027 6.54829 7.28374 6.54829 6.21644ZM22.5 11.9857C22.9904 11.6972 23.5961 11.8703 23.8557 12.3319C23.9711 12.4761 24 12.6492 24 12.8222L23.9711 16.6299V20.4952C23.9711 21.0433 23.5384 21.476 22.9904 21.476C22.7885 21.476 22.5865 21.4183 22.4423 21.3029L19.2116 19.4279C19.1971 19.4279 19.1899 19.4207 19.1827 19.4135C19.1755 19.4063 19.1683 19.3991 19.1539 19.3991L18.375 18.9375V14.3799L19.2116 13.8895L22.5 11.9857ZM16.4136 11.1203C15.6636 11.4953 14.827 11.7261 13.9328 11.7261C12.8367 11.7261 11.7982 11.4088 10.9329 10.8319H7.64444C6.77907 11.4088 5.74062 11.7261 4.64448 11.7261C3.75026 11.7261 2.91373 11.5242 2.16374 11.1203C1.50028 11.4953 1.03875 12.2453 1.03875 13.053V20.0914C1.03875 21.3894 2.10605 22.4279 3.37526 22.4279H15.2309C16.5289 22.4279 17.5674 21.3606 17.5674 20.0914V13.053C17.5386 12.2453 17.077 11.4953 16.4136 11.1203ZM15.8366 6.21644C15.8366 5.17799 15.0001 4.31262 13.9328 4.31262C12.8655 4.31262 12.029 5.14915 12.029 6.21644C12.029 7.25489 12.8944 8.12027 13.9328 8.12027C14.9713 8.12027 15.8366 7.28374 15.8366 6.21644Z" fill="url(#paint0_linear)"/>\n' +
			'</g>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.49999" y1="18.5174" x2="10.0606" y2="-5.4078" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	childrenGarden: {
		priority: 16,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<g clip-path="url(#clip0)">\n' +
			'\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M12.6 1.21327L23.5992 9.21267C24.3991 9.71265 23.8992 11.0125 22.9992 11.0125H20.9993V22.0118C20.9993 22.6117 20.5994 23.0117 19.9994 23.0117H4.00056C3.40061 23.0117 3.00065 22.6117 3.00065 22.0118V11.0125H1.00077C0.100837 11.0125 -0.399143 9.71265 0.400816 9.21267L11.4001 1.21327C11.8 0.913287 12.2 0.913287 12.6 1.21327ZM14.2976 14.9049H16.5204C17.3446 14.9049 18.0001 15.5639 18.0005 16.3881V19.3274C18.0005 20.1512 17.3446 20.8328 16.5208 20.8328H13.5815C12.7577 20.8328 12.073 20.1512 12.073 19.3274V17.5892C12.0294 17.8651 11.8886 18.1284 11.6746 18.342L9.61613 20.4074C9.33501 20.689 8.95974 20.8437 8.55963 20.8437C8.15953 20.8437 7.78426 20.6886 7.50314 20.4074L5.43723 18.342C4.8545 17.7592 4.8545 16.8113 5.43679 16.229L7.50183 14.1635C7.78339 13.8819 8.15735 13.7272 8.55746 13.7272C8.95756 13.7272 9.33108 13.8824 9.6122 14.1635L9.67192 14.2271C9.5137 13.99 9.41389 13.7054 9.41389 13.3995V10.0243C9.41389 9.2005 10.0986 8.5415 10.9224 8.5415H14.2976C15.1217 8.5415 15.7773 9.2005 15.7773 10.0243V13.3995C15.7773 14.2232 15.1213 14.9049 14.2976 14.9049ZM10.2939 17.6394C10.3305 17.628 10.3667 17.6062 10.4015 17.5731C10.4617 17.5165 10.4926 17.4467 10.4952 17.3661C10.4974 17.2833 10.4743 17.2166 10.4264 17.1656C10.3802 17.1164 10.2834 17.0593 10.1365 16.9939L8.22316 16.1183C8.12902 16.0725 8.05318 16.0372 7.99565 16.011C7.93812 15.9849 7.87928 15.9657 7.81869 15.9526C7.75811 15.94 7.69622 15.9413 7.63259 15.957C7.56895 15.9727 7.50619 16.0097 7.4443 16.0681C7.38328 16.1257 7.34319 16.1858 7.32401 16.2486C7.3044 16.3113 7.30004 16.3737 7.3105 16.4356C7.32096 16.4975 7.34188 16.5676 7.37369 16.6465L7.42082 16.7628L7.45563 16.8487L8.24147 18.8061C8.27241 18.8846 8.29813 18.9447 8.31817 18.9861C8.33822 19.0275 8.36263 19.0633 8.39096 19.0934C8.44021 19.1452 8.50559 19.1714 8.58709 19.1718C8.66903 19.1718 8.7379 19.1457 8.79368 19.0929C8.85993 19.0306 8.88913 18.9665 8.88172 18.9007C8.87432 18.8349 8.83901 18.7277 8.77625 18.5791L8.61499 18.1981L9.50804 17.3543L9.87328 17.5308C9.91948 17.5518 9.97309 17.5749 10.0345 17.601C10.096 17.6267 10.1452 17.6429 10.1827 17.6481C10.2202 17.6533 10.2573 17.6503 10.2939 17.6394ZM13.0393 13.2203C13.1587 13.2046 13.2646 13.1772 13.3566 13.1388C13.5034 13.0743 13.6203 12.9741 13.7079 12.8394C13.7946 12.7038 13.8377 12.5517 13.8377 12.3826C13.8377 11.687 13.2171 11.463 12.4997 11.463H11.9388V10.6815L13.2546 10.6819C13.3818 10.6819 13.4847 10.5791 13.4847 10.4518C13.4847 10.3246 13.3818 10.2217 13.2546 10.2217H11.6973C11.567 10.2217 11.4724 10.2509 11.414 10.3093C11.3556 10.3677 11.3264 10.4636 11.3264 10.597V12.8686C11.3264 12.9993 11.3547 13.0944 11.4118 13.1541C11.4689 13.2138 11.5639 13.2439 11.6973 13.2439H12.6209C12.7804 13.2439 12.9198 13.236 13.0393 13.2203ZM15.8675 19.2925C16.0144 19.228 16.1312 19.1282 16.2179 18.9927C16.3042 18.8571 16.3478 18.705 16.3482 18.5359C16.3482 18.1707 16.1495 17.9244 15.7524 17.798C16.0549 17.6577 16.2061 17.4367 16.2061 17.1342C16.2061 17.0462 16.1917 16.9625 16.163 16.8836C16.1338 16.8043 16.0919 16.7324 16.037 16.667C15.9821 16.6021 15.9189 16.548 15.8474 16.5053C15.7633 16.4547 15.6687 16.4203 15.5628 16.4024C15.4569 16.3846 15.3318 16.3754 15.1876 16.3754H14.2082C14.0779 16.3754 13.9833 16.4046 13.9249 16.463C13.8665 16.5214 13.8373 16.6173 13.8373 16.7507V19.0223C13.8373 19.1531 13.8656 19.2481 13.9227 19.3078C13.9798 19.3675 14.0748 19.3976 14.2082 19.3976H15.1318C15.2913 19.3976 15.4308 19.3897 15.5502 19.374C15.6696 19.3583 15.7755 19.3309 15.8675 19.2925ZM12.575 11.9019C12.7882 11.9019 12.9481 11.9363 13.0553 12.0052C13.1626 12.0736 13.2162 12.1843 13.2162 12.3369C13.2162 12.635 13.0091 12.7841 12.5955 12.7841H11.9378V11.9019H12.575ZM15.3632 17.5732C15.4464 17.5444 15.5101 17.4895 15.5541 17.4084C15.5885 17.3509 15.6055 17.286 15.6055 17.2145C15.6055 17.0619 15.551 16.9604 15.4425 16.9103C15.334 16.8601 15.1684 16.8349 14.9456 16.8349H14.4488V17.6163H15.0097C15.1623 17.6168 15.2799 17.6019 15.3632 17.5732ZM9.0726 17.1323L8.41621 17.7525L7.88491 16.5387L9.0726 17.1323ZM15.5663 18.1588C15.4591 18.09 15.2991 18.0555 15.086 18.0555H14.4488V18.9377H15.1065C15.5201 18.9377 15.7271 18.7886 15.7271 18.4905C15.7271 18.338 15.6735 18.2273 15.5663 18.1588Z" fill="url(#paint0_linear)"/>\n' +
			'</g>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.5" y1="18.8823" x2="11.3392" y2="-5.33517" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	childrenPlayground: {
		priority: 18,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<g clip-path="url(#clip0)">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M13.8263 5.84995L7.49825 0.178172C7.23182 -0.0593906 6.83085 -0.0593906 6.56441 0.178172L0.236378 5.84995C-0.24545 6.27727 0.0593314 7.07836 0.7033 7.07836H13.3594C14.0034 7.07836 14.3081 6.27722 13.8263 5.84995ZM13.3594 22.5941H12.6563V8.48486H1.40649V22.5941H0.703369C0.314728 22.5941 0.000244152 22.9085 0.000244152 23.2972C0.000244152 23.6858 0.314728 24.0003 0.703369 24.0003H2.10962C2.49826 24.0003 2.81274 23.6858 2.81274 23.2972V19.7816H4.21899V23.2972C4.21899 23.6858 4.53348 24.0003 4.92212 24.0003C5.31076 24.0003 5.62524 23.6858 5.62524 23.2972V22.5941H8.4377V23.2972C8.4377 23.6858 8.75218 24.0003 9.14082 24.0003C9.52946 24.0003 9.84395 23.6858 9.84395 23.2972V19.7816H11.2502V23.2972C11.2502 23.6858 11.5647 24.0003 11.9533 24.0003H13.3596C13.7482 24.0003 14.0627 23.6858 14.0627 23.2972C14.0626 22.9085 13.7481 22.5941 13.3594 22.5941ZM4.21895 18.3754H2.8127V16.9691H4.21895V18.3754ZM8.43765 21.1878H5.6252V19.7816H8.43765V21.1878ZM8.43765 18.3754H5.6252V16.9691H8.43765V18.3754ZM7.0314 15.5161C5.48026 15.5161 4.21895 14.2547 4.21895 12.7036C4.21895 11.1525 5.48031 9.89116 7.0314 9.89116C8.58254 9.89116 9.84385 11.1525 9.84385 12.7036C9.84385 14.2547 8.58254 15.5161 7.0314 15.5161ZM11.2501 18.3754H9.84385V16.9691H11.2501V18.3754ZM20.1123 21.1877H22.5935C23.3688 21.1877 23.9997 21.8186 23.9997 22.5938C23.9997 23.369 23.3687 24 22.5935 24H19.4325C18.3058 24 17.2916 23.3306 16.8474 22.2951L14.9296 16.4148C14.7667 16.0322 14.446 15.705 14.0624 15.5836V12.7603C15.4741 12.9875 16.692 13.9168 17.2676 15.2604L18.8201 20.3355C19.0405 20.8533 19.5479 21.1877 20.1123 21.1877Z" fill="url(#paint0_linear)"/>\n' +
			'</g>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.49974" y1="19.5002" x2="13.4105" y2="-5.04186" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	school:{
		priority: 17,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<g clip-path="url(#clip0)">\n' +
			'\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M22.476 0C22.7464 0.119087 22.8373 0.325879 22.8365 0.617964C22.8311 3.73919 22.8313 6.86042 22.8316 9.98118L22.8316 11.854V11.9924H19.9189C19.9251 11.9779 19.9307 11.9641 19.9361 11.951C19.948 11.922 19.9587 11.8961 19.972 11.8717L20.0614 11.7079L20.0616 11.7076C20.165 11.5181 20.2685 11.3284 20.3759 11.141C20.4169 11.0702 20.4218 11.0155 20.3791 10.9415C20.3103 10.8224 20.2442 10.7017 20.178 10.581L20.178 10.5809L20.1778 10.5807C20.1032 10.4446 20.0287 10.3085 19.9502 10.1747C19.9245 10.1304 19.8569 10.0837 19.8094 10.0837C18.5944 10.0795 17.3787 10.0803 16.1635 10.081L15.7074 10.0813C15.6919 10.0813 15.6765 10.0835 15.6575 10.0861H15.6575L15.6521 10.0868C15.6439 10.0879 15.6351 10.0891 15.6253 10.0902V11.9916H9.86648C9.86648 11.9361 9.86613 11.8808 9.86578 11.8256C9.86472 11.661 9.86368 11.4979 9.87212 11.3358C9.87373 11.2996 9.94293 11.2521 9.9904 11.2352C10.3418 11.107 10.6939 10.9809 11.046 10.8548L11.0477 10.8542C11.2231 10.7914 11.3986 10.7286 11.5739 10.6655C12.0768 10.4845 12.5025 10.1956 12.8308 9.76753C13.1641 9.33319 13.4985 8.89959 13.833 8.46597L13.8331 8.46576C14.2768 7.8905 14.7205 7.31519 15.1618 6.73806C15.7725 5.93905 15.7758 4.85842 15.1771 4.11815C14.358 3.1043 12.7914 3.06729 11.9602 4.06987C11.4861 4.64205 11.0341 5.23225 10.5819 5.82261C10.4223 6.03091 10.2628 6.23922 10.1022 6.44678C10.0355 6.53368 9.96224 6.58115 9.85361 6.60207C9.53886 6.66297 9.22532 6.72911 8.90587 6.79649L8.90586 6.79649C8.7737 6.82437 8.64053 6.85246 8.50584 6.88048C9.14955 5.45546 9.04656 4.12056 7.96592 2.98119C6.88368 1.84021 5.55603 1.66078 4.09158 2.23046V2.07758C4.09158 1.93141 4.09254 1.78524 4.09349 1.63909L4.0935 1.63893C4.0957 1.30162 4.09791 0.964424 4.08836 0.627619C4.08032 0.331512 4.17366 0.115868 4.45528 0H22.476ZM0.175416 24C0.0426508 23.9324 -0.00482292 23.823 0.000809561 23.6757C0.0067696 23.5232 0.00661845 23.3698 0.00646733 23.2164C0.00616963 22.9142 0.00587207 22.6121 0.0523065 22.3175C0.22289 21.2353 0.830393 20.4548 1.81688 19.9736C1.88206 19.9422 1.94723 19.9108 2.03172 19.8706C1.31398 19.3942 0.937411 18.7409 0.973619 17.8855C0.998563 17.2933 1.2472 16.7945 1.68734 16.3945C2.57324 15.5891 3.94998 15.6768 4.76026 16.582C5.52788 17.4398 5.54317 19.0273 4.23241 19.8762C5.04671 20.2102 5.63812 20.7686 6.01308 21.5925C6.38804 20.775 6.97302 20.211 7.80421 19.8762C7.05509 19.3741 6.6761 18.6934 6.74772 17.8019C6.79599 17.2 7.07118 16.7027 7.54109 16.3205C8.4616 15.5722 9.85363 15.7291 10.5834 16.6456C11.3213 17.5709 11.2432 19.0651 9.99202 19.8738C10.812 20.2077 11.4066 20.7686 11.7807 21.5925C12.1549 20.7726 12.7423 20.2102 13.5703 19.8754C12.8791 19.4095 12.4953 18.7892 12.5065 17.958C12.5146 17.3561 12.7423 16.8427 13.1808 16.4348C14.0997 15.5802 15.4781 15.6559 16.3044 16.5949C17.0704 17.4655 17.0672 19.0289 15.7645 19.8762C16.5812 20.2085 17.1734 20.767 17.5468 21.5917C17.9201 20.7782 18.5051 20.2134 19.3371 19.8754C18.5695 19.3564 18.1929 18.6572 18.2887 17.7415C18.349 17.1614 18.6234 16.6858 19.0772 16.3205C20.0138 15.5674 21.3873 15.7243 22.126 16.6593C22.8799 17.6128 22.7424 19.0957 21.5338 19.8698L21.6093 19.9063L21.6094 19.9064L21.6096 19.9065C21.6786 19.9397 21.7445 19.9714 21.809 20.0058C22.9258 20.5948 23.5052 21.5241 23.5566 22.7826C23.5633 22.9459 23.5617 23.1091 23.5601 23.2724C23.5587 23.4068 23.5574 23.5413 23.5607 23.6757C23.5639 23.823 23.5188 23.9324 23.3853 24.0008C15.6478 24 7.91203 24 0.175416 24ZM23.168 14.4031C23.4649 14.4039 23.6806 14.3219 23.7948 14.037V12.8365C23.6733 12.5589 23.4553 12.4527 23.1616 12.4817C23.1487 12.4827 23.1354 12.4824 23.1223 12.482L23.1222 12.482C23.1157 12.4818 23.1092 12.4817 23.1028 12.4817H10.0089C9.97651 12.4817 9.94448 12.4835 9.91103 12.4855C9.89548 12.4864 9.87962 12.4873 9.86328 12.4881V14.3991H10.0306C10.8997 14.3991 11.7687 14.3993 12.6377 14.3995C13.5067 14.3997 14.3757 14.3999 15.2447 14.3999C15.9049 14.3999 16.565 14.3997 17.2252 14.3995H17.2253H17.2254C19.2063 14.3989 21.1874 14.3983 23.168 14.4031ZM8.62775 14.895L8.62765 14.895C8.4383 14.9227 8.25644 14.9493 8.07935 14.9938C7.57806 15.1201 7.14033 15.3744 6.76618 15.7317C6.69376 15.8001 6.62215 15.8322 6.52157 15.8314C6.36059 15.8303 6.19962 15.832 6.03873 15.8337H6.03872L6.03857 15.8337C5.85772 15.8357 5.67697 15.8376 5.49645 15.8355C5.43128 15.8347 5.35081 15.8081 5.30334 15.7646C4.43272 14.9624 3.42611 14.7106 2.28031 15.001C2.26297 15.0055 2.24564 15.0084 2.22512 15.0119C2.2123 15.0141 2.19823 15.0165 2.18214 15.0196C2.18099 15.0017 2.17952 14.9849 2.17812 14.9689C2.17561 14.9401 2.17329 14.9136 2.17329 14.8868C2.17249 13.3234 2.17249 11.7608 2.17249 10.1981C2.17249 9.74755 2.23927 9.31063 2.49273 8.92441C2.84516 8.38771 3.37542 8.16482 3.98936 8.14551C4.74572 8.12218 5.5037 8.11091 6.26006 8.13747C6.95607 8.16161 7.62875 8.05378 8.30223 7.90573C8.90815 7.77226 9.51654 7.64809 10.1247 7.52396L10.379 7.47203C10.4892 7.4495 10.5697 7.40605 10.6413 7.31352C11.1682 6.62963 11.6986 5.9483 12.2289 5.26708L12.2293 5.26668L12.6352 4.7451C12.9136 4.38704 13.2846 4.24784 13.7223 4.31864C14.1544 4.38865 14.4682 4.63165 14.605 5.05891C14.7386 5.47733 14.6396 5.85631 14.3716 6.19909C14.1088 6.53514 13.8489 6.8729 13.5889 7.21081L13.5887 7.21097C13.4914 7.33742 13.3941 7.4639 13.2966 7.59031C13.201 7.7145 13.1052 7.8386 13.0094 7.9627L13.0092 7.963C12.7053 8.35663 12.4015 8.75033 12.1017 9.14729C11.8797 9.44259 11.5956 9.64295 11.2504 9.76606C11.004 9.85401 10.7576 9.94242 10.5113 10.0308C10.0185 10.2077 9.5256 10.3845 9.03204 10.5578C8.93066 10.5932 8.90169 10.6431 8.9025 10.7469C8.90594 11.8773 8.90585 13.0077 8.90575 14.1376L8.90571 14.7025C8.90652 14.754 8.90652 14.8071 8.90652 14.8522C8.81166 14.8681 8.71884 14.8817 8.62775 14.895ZM3.13 5.29879C3.13081 6.60231 4.21305 7.67811 5.52462 7.67972C6.84664 7.68133 7.9321 6.60955 7.93773 5.29798C7.94337 3.96711 6.86354 2.88165 5.53186 2.87843C4.2042 2.87441 3.13 3.95745 3.13 5.29879Z" fill="url(#paint0_linear)"/>\n' +
			'</g>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.42684" y1="19.5007" x2="13.5043" y2="-4.85443" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	childGoodsMarket: {
		priority: 19,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<g clip-path="url(#clip0)">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M0.707309 4.8256L2.20961 3.33136C2.84682 2.69279 3.7532 2.32407 4.68976 2.32407C5.62773 2.32407 6.53411 2.69279 7.17404 3.33549L9.90001 6.50907V4.37574C9.90001 4.18964 9.82586 4.01044 9.694 3.87863L8.16418 2.34741C7.23582 1.41221 6.00123 0.895832 4.687 0.89377C4.68287 0.893066 4.68015 0.893066 4.67603 0.893066C3.36451 0.893066 2.13132 1.40391 1.20432 2.33157L0.20598 3.33C-0.0686602 3.60464 -0.0686602 4.04963 0.20598 4.32427L0.707309 4.8256ZM21.1031 20.0714C22.2216 19.5524 22.799 19.0953 22.8045 19.0899C23.0832 18.8214 23.5268 18.8262 23.7973 19.1002C24.0679 19.3756 24.0679 19.8157 23.7946 20.0883C21.4101 22.4728 15.338 23.1068 11.9624 23.1068C8.45285 23.1068 2.56652 22.4162 0.215319 20.089C-0.0593213 19.8143 -0.0593213 19.3694 0.215319 19.094C0.48996 18.8193 0.934944 18.82 1.20958 19.0933C1.20958 19.0938 1.53382 19.3922 2.24829 19.7801C2.24829 19.7801 2.58424 18.7933 2.75177 18.314C3.83946 15.1952 5.05619 11.7057 4.27615 9.1651C3.92046 9.52628 3.61835 9.83251 3.61835 9.83251C2.81637 10.6373 1.41701 10.6331 0.623226 9.83664C-0.200743 9.01196 -0.200743 7.67026 0.623226 6.84559L3.15419 4.32835C3.95074 3.53049 5.33773 3.53185 6.13151 4.32835L9.14998 7.84801V13.9661C9.14998 14.3548 9.46446 14.6693 9.8531 14.6693H11.2594V17.4818H10.0083C8.51004 17.4818 7.17246 18.4444 6.67807 19.8768L6.61163 20.0744C6.51298 20.368 6.36143 20.8189 6.24565 21.1605C7.95246 21.5124 9.8629 21.7005 11.9625 21.7005C13.7792 21.7005 15.4245 21.5628 16.8843 21.306V20.9974C16.8843 19.059 15.3078 17.4818 13.3687 17.4818H12.6656V14.6693H14.0719C14.4605 14.6693 14.775 14.3548 14.775 13.9661V9.04426H16.1812C18.8949 9.04426 21.1031 11.2525 21.1031 13.9661V20.0714ZM13.3689 9.04395H10.5564V13.2627H13.3689V9.04395ZM19.2505 8.42046C19.7556 7.93826 20.4359 7.6377 21.1875 7.6377C22.7379 7.6377 24 8.89906 24 10.4502V15.3721C24 15.7607 23.6855 16.0752 23.2969 16.0752C22.9082 16.0752 22.5938 15.7607 22.5938 15.3721V13.9658C22.5938 11.5613 21.2303 9.49114 19.2505 8.42046Z" fill="url(#paint0_linear)"/>\n' +
			'</g>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.5" y1="18.9417" x2="11.5439" y2="-5.31592" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	medicine: {
		priority: 11,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<g clip-path="url(#clip0)">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M12.6 1.21327L23.5992 9.21267C24.3991 9.71265 23.8992 11.0125 22.9992 11.0125H20.9993V22.0118C20.9993 22.6117 20.5994 23.0117 19.9994 23.0117H4.00056C3.40061 23.0117 3.00065 22.6117 3.00065 22.0118V11.0125H1.00077C0.100837 11.0125 -0.399143 9.71265 0.400816 9.21267L11.4001 1.21327C11.8 0.913287 12.2 0.913287 12.6 1.21327ZM6.00044 15.0123C6.00044 18.3121 8.70025 21.0119 12 21.0119C15.2998 21.0119 17.9996 18.3121 17.9996 15.0123C17.9996 11.7125 15.2998 9.01272 12 9.01272C8.70025 9.01272 6.00044 11.7125 6.00044 15.0123ZM13.4998 10.5127V13.5125H16.4996V16.5123H13.4998V19.5121H10.5V16.5123H7.50024V13.5125H10.5V10.5127H13.4998Z" fill="url(#paint0_linear)"/>\n' +
			'</g>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.5" y1="18.8823" x2="11.3392" y2="-5.33517" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	fitnes: {
		priority: 4,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<g clip-path="url(#clip0)">\n' +
			'<path d="M22.725 8.33619L23.488 7.57319C23.818 7.24319 24 6.80319 24 6.33619C24 5.86819 23.818 5.42919 23.487 5.09919L21.901 3.51319L22.707 2.70719C23.098 2.31619 23.098 1.68419 22.707 1.29319C22.316 0.902191 21.684 0.902191 21.293 1.29319L20.487 2.09919L18.902 0.514191C18.241 -0.146809 17.089 -0.147809 16.427 0.514191L15.664 1.27719L15.402 1.01519C14.742 0.354191 13.589 0.353191 12.927 1.01519L12.341 1.60119C11.659 2.28319 11.659 3.39319 12.341 4.07619L15.427 7.16219L7.159 15.4302L4.073 12.3402C3.392 11.6582 2.281 11.6602 1.599 12.3402L1.013 12.9262C0.682 13.2572 0.5 13.6972 0.5 14.1642C0.5 14.6322 0.682 15.0712 1.013 15.4012L1.276 15.6642L0.513 16.4272C0.182 16.7572 0 17.1972 0 17.6642C0 18.1322 0.182 18.5712 0.513 18.9012L2.099 20.4872L1.293 21.2932C0.902 21.6842 0.902 22.3162 1.293 22.7072C1.488 22.9022 1.744 23.0002 2 23.0002C2.256 23.0002 2.512 22.9022 2.707 22.7072L3.513 21.9012L5.098 23.4862C5.429 23.8182 5.868 24.0002 6.336 24.0002C6.803 24.0002 7.243 23.8182 7.573 23.4872L8.336 22.7242L8.598 22.9862C8.929 23.3172 9.368 23.4992 9.836 23.4992C10.303 23.4992 10.743 23.3172 11.073 22.9862L11.659 22.4002C12.341 21.7182 12.341 20.6082 11.659 19.9252L8.573 16.8392L16.841 8.57119L19.927 11.6572C20.268 11.9982 20.716 12.1682 21.164 12.1682C21.612 12.1682 22.06 11.9972 22.401 11.6562L22.987 11.0702C23.318 10.7392 23.5 10.3002 23.5 9.83319C23.5 9.36519 23.318 8.92619 22.987 8.59619L22.725 8.33619Z" fill="url(#paint0_linear)"/>\n' +
			'</g>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.5" y1="19.5035" x2="13.3917" y2="-5.03681" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	waterpool: {
		priority: 3,
		svg: '<svg viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<g clip-path="url(#clip0)">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M6.68571 11.0999L10.5857 7.1999L9.38565 5.99987C8.04769 4.66787 6.76969 4.18789 4.58567 4.19987V1.1999C7.58565 1.18792 9.29565 1.73388 11.1617 3.59991L18.8477 11.2979C18.6677 11.3939 18.5057 11.4839 18.3617 11.5739L18.3568 11.5768C17.9157 11.8391 17.6452 11.9999 16.9817 11.9999C16.3157 11.9999 16.0457 11.8439 15.6017 11.5739C15.0617 11.2439 14.3177 10.7999 12.9857 10.7999C11.6596 10.7999 10.9163 11.2459 10.3769 11.5696L10.3697 11.5739L10.3648 11.5768C9.92371 11.8391 9.65325 11.9999 8.98971 11.9999C8.32371 11.9999 8.05371 11.8379 7.60972 11.5679C7.35773 11.4179 7.05769 11.2439 6.68571 11.0999ZM20.9776 13.7999C22.3096 13.7999 23.0536 14.2439 23.5936 14.5739L23.6133 14.5853C24.0575 14.8425 24.3293 14.9999 24.9856 14.9999V17.3999C23.6536 17.3999 22.9096 16.9559 22.3696 16.6259L22.3647 16.623C21.9236 16.3607 21.6532 16.1999 20.9896 16.1999C20.326 16.1999 20.0556 16.3607 19.6145 16.623L19.6096 16.6259L19.6024 16.6302C19.063 16.9539 18.3197 17.3999 16.9936 17.3999C15.6616 17.3999 14.9176 16.9559 14.3776 16.6259C13.9336 16.3559 13.6636 16.1999 12.9976 16.1999C12.3341 16.1999 12.0636 16.3607 11.6225 16.623L11.6176 16.6259C11.0656 16.9559 10.3216 17.3999 8.98963 17.3999C7.65763 17.3999 6.91361 16.9559 6.37361 16.6319C5.92963 16.3619 5.65963 16.1999 4.98761 16.1999C4.32153 16.1999 4.05631 16.359 3.61349 16.6248L3.60161 16.6319C3.06161 16.9559 2.31759 17.3999 0.985596 17.3999V14.9999C1.6516 14.9999 1.9216 14.8379 2.37159 14.5679C2.91159 14.2439 3.65561 13.7999 4.98761 13.7999C6.31961 13.7999 7.06363 14.2439 7.60363 14.5679C8.04761 14.8379 8.31761 14.9999 8.98963 14.9999C9.65318 14.9999 9.92364 14.8391 10.3647 14.5768L10.3696 14.5739L10.3768 14.5696C10.9162 14.2459 11.6595 13.7999 12.9856 13.7999C14.3176 13.7999 15.0616 14.2439 15.6016 14.5739C16.0456 14.8439 16.3156 14.9999 16.9816 14.9999C17.6452 14.9999 17.9156 14.8391 18.3567 14.5768L18.3616 14.5739L18.3688 14.5696C18.9082 14.2459 19.6515 13.7999 20.9776 13.7999ZM20.9776 19.1999C19.6515 19.1999 18.9082 19.6459 18.3688 19.9696L18.3616 19.9739L18.3567 19.9768C17.9156 20.2391 17.6452 20.3999 16.9816 20.3999C16.3156 20.3999 16.0456 20.2439 15.6016 19.9739C15.0616 19.6439 14.3176 19.1999 12.9856 19.1999C11.6595 19.1999 10.9162 19.6459 10.3768 19.9696L10.3696 19.9739L10.3647 19.9768C9.92364 20.2391 9.65318 20.3999 8.98963 20.3999C8.31761 20.3999 8.04761 20.2379 7.60363 19.9679C7.06363 19.6439 6.31961 19.1999 4.98761 19.1999C3.65561 19.1999 2.91159 19.6439 2.37159 19.9679C1.9216 20.2379 1.6516 20.3999 0.985596 20.3999V22.7999C2.31759 22.7999 3.06161 22.3559 3.60161 22.0319L3.61349 22.0248C4.05631 21.7591 4.32153 21.5999 4.98761 21.5999C5.65963 21.5999 5.92963 21.7619 6.37361 22.0319C6.91361 22.3559 7.65763 22.7999 8.98963 22.7999C10.3216 22.7999 11.0656 22.3559 11.6176 22.0259L11.6225 22.023C12.0636 21.7607 12.3341 21.5999 12.9976 21.5999C13.6636 21.5999 13.9336 21.7559 14.3776 22.0259C14.9176 22.3559 15.6616 22.7999 16.9936 22.7999C18.3197 22.7999 19.063 22.3539 19.6024 22.0302L19.6096 22.0259L19.6145 22.023C20.0556 21.7607 20.326 21.5999 20.9896 21.5999C21.6532 21.5999 21.9236 21.7607 22.3647 22.023L22.3696 22.0259C22.9096 22.3559 23.6536 22.7999 24.9856 22.7999V20.3999C24.3292 20.3999 24.0575 20.2425 23.6132 19.9853L23.5936 19.9739C23.0536 19.6439 22.3096 19.1999 20.9776 19.1999ZM21.3857 4.20018C21.3857 5.85702 20.0426 7.20016 18.3857 7.20016C16.7289 7.20016 15.3857 5.85702 15.3857 4.20018C15.3857 2.54333 16.7289 1.2002 18.3857 1.2002C20.0426 1.2002 21.3857 2.54333 21.3857 4.20018Z" fill="url(#paint0_linear)"/>\n' +
			'</g>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-7.5144" y1="18.7498" x2="11.8659" y2="-5.37095" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	carService: {
		priority: 9,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<g clip-path="url(#clip0)">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M20.047 2.00467H18.2843V3.10316H20.0215L19.8426 3.53745C19.6638 3.97173 19.3828 4.32938 18.9996 4.61039C17.85 5.45341 16.2406 5.19795 15.4231 4.04837H8.55121C8.2702 4.40602 7.91255 4.71257 7.47826 4.8914C6.1754 5.45341 4.66818 4.84031 4.1317 3.53745L3.95288 3.10316H5.74112V2.00467H3.97843L4.15725 1.57039C4.33607 1.1361 4.61708 0.778452 5.00028 0.497443C6.14986 -0.345583 7.75927 -0.0901202 8.57675 1.05946H15.4487C15.7297 0.701813 16.0873 0.395258 16.5216 0.216435C17.8245 -0.345583 19.3317 0.267527 19.8682 1.57039L20.047 2.00467ZM21.1967 12.5298L22.193 14.1392C22.2696 14.2669 22.3207 14.3947 22.3207 14.5479V20.3469C22.3207 20.7812 21.9886 21.1133 21.5543 21.1133H21.2988V23.2336C21.2988 23.6679 20.9667 24 20.5324 24H16.8027C16.3684 24 16.0363 23.6679 16.0363 23.2336V21.1133H7.9637V23.2336C7.9637 23.6679 7.6316 24 7.19731 24H3.46756C3.03327 24 2.70117 23.6679 2.70117 23.2336V21.1133H2.44571C2.01142 21.1133 1.67932 20.7812 1.67932 20.3469V14.5479C1.67932 14.3691 1.73041 14.1903 1.8326 14.0626L3.08436 12.4276L4.46386 7.31836C4.56605 6.98626 4.84706 6.75635 5.2047 6.75635H19.0508C19.4084 6.75635 19.6894 6.98626 19.7916 7.31836L21.1711 12.4276C21.1711 12.4404 21.1775 12.4595 21.1839 12.4787C21.1903 12.4979 21.1967 12.517 21.1967 12.5298ZM7.01849 18.4821C7.45277 18.4821 7.78487 18.15 7.78487 17.7157V16.0807C7.78487 15.6464 7.45277 15.3143 7.01849 15.3143H4.64269C4.2084 15.3143 3.8763 15.6464 3.8763 16.0807V17.7157C3.8763 18.15 4.2084 18.4821 4.64269 18.4821H7.01849ZM9.6242 17.5368H14.3758V16.0041H9.6242V17.5368ZM5.79227 8.28912L4.82151 11.8656H19.434L18.4632 8.28912H5.79227ZM19.3573 18.4821C19.7916 18.4821 20.1237 18.15 20.1237 17.7157L20.1493 16.0807C20.1493 15.6464 19.8172 15.3143 19.3829 15.3143H16.9815C16.5472 15.3143 16.2151 15.6464 16.2151 16.0807V17.7157C16.2151 18.15 16.5472 18.4821 16.9815 18.4821H19.3573Z" fill="url(#paint0_linear)"/>\n' +
			'</g>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-5.63116" y1="19.5" x2="16.4046" y2="-1.72911" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	carWash: {
		priority: 10,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M13.9347 2.03265V0.734694C13.9347 0.318367 13.6164 0 13.2 0H2.17964C1.76331 0 1.44495 0.318367 1.44495 0.734694V24H2.91433V1.46939H12.4654V2.03265C10.7021 2.20408 9.35515 3.67347 9.35515 5.46122C9.35515 5.87755 9.67352 6.19592 10.0898 6.19592H16.3103C16.7266 6.19592 17.0449 5.87755 17.0449 5.46122C17.0449 3.67347 15.698 2.20408 13.9347 2.03265ZM22.3836 15.1836L21.3305 13.9836L20.1305 10.0162C20.0326 9.69787 19.7387 9.50195 19.4203 9.50195H7.49377C7.17541 9.50195 6.88153 9.69787 6.78357 10.0162L5.60806 13.9346L4.35908 15.1346C4.21214 15.2815 4.13867 15.4775 4.13867 15.6734V20.6693C4.13867 21.0856 4.45704 21.404 4.87337 21.404H5.2652V23.1428C5.2652 23.5591 5.58357 23.8775 5.9999 23.8775H9.20806C9.62439 23.8775 9.94275 23.5591 9.94275 23.1428V21.404H16.7264V23.1428C16.7264 23.5591 17.0448 23.8775 17.4611 23.8775H20.6938C21.1101 23.8775 21.4285 23.5591 21.4285 23.1428V21.404H21.8203C22.2366 21.404 22.555 21.0856 22.555 20.6693V15.6734C22.555 15.502 22.506 15.3305 22.3836 15.1836ZM9.25704 18.6366C9.25704 19.053 8.93867 19.3713 8.52235 19.3713H6.97949C6.56316 19.3713 6.24479 19.053 6.24479 18.6366V17.2652C6.24479 16.8489 6.56316 16.5305 6.97949 16.5305H8.52235C8.93867 16.5305 9.25704 16.8489 9.25704 17.2652V18.6366ZM15.3795 18.3183H11.2897V16.8489H15.404L15.3795 18.3183ZM7.27337 13.4938L8.03255 10.9713H18.8815L19.6407 13.4938H7.27337ZM20.3999 18.6366C20.3999 19.053 20.0815 19.3713 19.6652 19.3713H18.1468C17.7305 19.3713 17.4121 19.053 17.4121 18.6366V17.2652C17.4121 16.8489 17.7305 16.5305 18.1468 16.5305H19.6897C20.106 16.5305 20.4244 16.8489 20.4244 17.2652L20.3999 18.6366ZM12.4653 7.02881H13.9347V8.54718H12.4653V7.02881ZM16.8734 7.02881H15.4041V8.54718H16.8734V7.02881ZM9.52661 7.02881H10.996V8.54718H9.52661V7.02881Z" fill="url(#paint0_linear)"/>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-6.03153" y1="19.5" x2="16.0171" y2="-2.22388" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	bankomat: {
		priority: 20,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 -0.25L22.5 -0.249999C23.328 -0.249999 24 0.422 24 1.25L24 5.75C24 6.578 23.328 7.25 22.5 7.25L21 7.25L21 4.25C21 3.422 20.328 2.75 19.5 2.75L4.5 2.75C3.672 2.75 3 3.422 3 4.25L3 7.25L1.5 7.25C0.672 7.25 -6.85045e-07 6.578 -7.21238e-07 5.75L-9.17939e-07 1.25C-9.54132e-07 0.422001 0.672 -0.25 1.5 -0.25ZM5.25 4.25L18.75 4.25C19.164 4.25 19.5 4.586 19.5 5L19.5 21.5C19.5 21.914 19.164 22.25 18.75 22.25L5.25 22.25C4.836 22.25 4.5 21.914 4.5 21.5L4.5 5C4.5 4.586 4.836 4.25 5.25 4.25ZM14.25 14C14.25 12.7595 13.2405 11.75 12 11.75C11.586 11.75 11.25 11.414 11.25 11C11.25 10.586 11.586 10.25 12 10.25L13.5 10.25C13.914 10.25 14.25 9.914 14.25 9.5C14.25 9.086 13.914 8.75 13.5 8.75L12.75 8.75L12.75 8C12.75 7.586 12.414 7.25 12 7.25C11.586 7.25 11.25 7.586 11.25 8L11.25 8.888C10.3785 9.1985 9.75 10.0235 9.75 11C9.75 12.2405 10.7595 13.25 12 13.25C12.414 13.25 12.75 13.5875 12.75 14C12.75 14.4125 12.414 14.75 12 14.75L10.5 14.75C10.086 14.75 9.75 15.086 9.75 15.5C9.75 15.914 10.086 16.25 10.5 16.25L11.25 16.25L11.25 17C11.25 17.414 11.586 17.75 12 17.75C12.414 17.75 12.75 17.414 12.75 17L12.75 16.112C13.6215 15.8015 14.25 14.9765 14.25 14Z" fill="url(#paint0_linear)"/>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="19.5" y1="30.2187" x2="-3.6291" y2="8.19406" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	park: {
		priority: 14,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M4.26562 4.96875C4.26562 4.57489 4.57489 4.26562 4.96875 4.26562C5.36261 4.26562 5.67188 4.57489 5.67188 4.96875V7.49011L8.46936 4.69263C8.38165 2.06744 6.86499 0 4.96875 0C3 0 1.45312 2.21246 1.45312 4.96875C1.45312 5.32031 1.48132 5.68597 1.55164 6.06573C1.3266 6.3468 1.12976 6.65625 0.946838 6.97961L0.946071 6.98147L0.945557 6.98254L4.26562 10.3026V4.96875ZM9.42645 7.95026L5.67188 11.7189V9.47882L8.68488 6.46582C8.97839 6.91443 9.23053 7.41815 9.42645 7.95026ZM9.89062 10.5938C9.89062 10.2422 9.86243 9.89069 9.82031 9.55322L5.67188 13.6876V16.8516C5.44684 16.8937 5.2077 16.9219 4.96875 16.9219C4.7298 16.9219 4.49066 16.8937 4.26562 16.8516V12.2913L0.324463 8.39697L0.323364 8.40009C0.11261 9.08911 0 9.83453 0 10.5939C0 13.772 1.8891 16.4157 4.26562 16.8517V22.5938H0.75C0.36145 22.5938 0 22.9083 0 23.2969C0 23.6854 0.36145 24 0.75 24H23.2969C23.6854 24 24 23.6854 24 23.2969C24 22.9083 23.6854 22.5938 23.2969 22.5938H22.5938V21.1406H23.2969C23.6854 21.1406 24 20.826 24 20.4375V19.0312C24 18.6427 23.6854 18.3281 23.2969 18.3281C22.9083 18.3281 22.5938 18.6427 22.5938 19.0312V19.7344H21.1875V18.3281H21.8906C22.2792 18.3281 22.5938 18.0135 22.5938 17.625V16.2188C22.5938 15.8302 22.2792 15.5156 21.8906 15.5156H10.5938C10.2052 15.5156 9.89062 15.8302 9.89062 16.2188V17.625C9.89062 18.0135 10.2052 18.3281 10.5938 18.3281H11.2969V19.7344H9.89062V19.0312C9.89062 18.6427 9.57605 18.3281 9.1875 18.3281C8.79895 18.3281 8.48438 18.6427 8.48438 19.0312V20.4375C8.48438 20.826 8.79895 21.1406 9.1875 21.1406H9.89062V22.5938H5.67188V16.8516C8.0484 16.4156 9.89062 13.772 9.89062 10.5938ZM12.7031 18.3281H19.7812V19.7344H12.7031V18.3281ZM21.1875 22.5938H11.2969V21.1406H21.1875V22.5938ZM22.4092 5.69971C22.494 5.47119 22.5469 5.22693 22.5469 4.96875C22.5469 3.80383 21.6024 2.85938 20.4375 2.85938C19.2726 2.85938 18.3281 3.80383 18.3281 4.96875C18.3281 5.22693 18.381 5.47119 18.4658 5.69971C17.5521 5.60577 16.9219 6.31018 16.9219 7.07812C16.9219 7.85486 17.5514 8.48438 18.3281 8.48438H22.5469C23.3236 8.48438 24 7.85486 24 7.07812C24 6.3175 23.3318 5.60468 22.4092 5.69971ZM16.9369 4.64392C16.1087 5.11285 15.551 5.99561 15.5251 7.00836C13.9158 6.6861 12.7031 5.26666 12.7031 3.5625C12.7031 1.62085 14.2771 0 16.2188 0C17.4694 0 18.5603 0.70459 19.1834 1.68823C17.9597 2.15771 17.0614 3.28912 16.9369 4.64392Z" fill="url(#paint0_linear)"/>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.5" y1="19.5" x2="13.4099" y2="-5.04242" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
	openWater: {
		priority: 15,
		svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
			'<path fill-rule="evenodd" clip-rule="evenodd" d="M21.4814 5.88362L21.4812 5.8835C20.6773 5.29886 19.7662 4.63623 18.0003 4.63623C16.2343 4.63623 15.323 5.2989 14.5192 5.88362L14.5189 5.88381C13.8011 6.40577 13.2342 6.81803 12.0004 6.81803C10.7664 6.81803 10.1994 6.4057 9.48159 5.88369L9.4815 5.88362C8.67755 5.2989 7.7663 4.63623 6.00019 4.63623C4.23408 4.63623 3.32283 5.2989 2.51888 5.88362L2.51867 5.88377C1.80087 6.40575 1.23387 6.81807 0 6.81807V9.81807C1.23393 9.81807 1.80093 9.40575 2.51878 8.88374L2.51888 8.88367C3.32283 8.29895 4.23413 7.63628 6.00019 7.63628C7.76625 7.63628 8.6775 8.29895 9.4815 8.88367L9.4816 8.88373C10.1994 9.40575 10.7664 9.81807 12.0004 9.81807C13.2344 9.81807 13.8014 9.40571 14.5192 8.88367C15.3231 8.29895 16.2343 7.63628 18.0003 7.63628C19.7663 7.63628 20.6775 8.29898 21.4814 8.88365L21.4814 8.88367C22.1992 9.40571 22.7662 9.81807 24 9.81807V6.81807C22.7663 6.81807 22.1992 6.4057 21.4815 5.88368L21.4814 5.88362ZM20.519 15.1165C19.8012 14.5945 19.2342 14.1821 18.0003 14.1821C16.7663 14.1821 16.1993 14.5945 15.4815 15.1165C14.6776 15.7013 13.7664 16.3639 12.0004 16.3639C10.2344 16.3639 9.32306 15.7013 8.51911 15.1165L8.51895 15.1164C7.80109 14.5944 7.23408 14.1821 6.00019 14.1821C4.76621 14.1821 4.19921 14.5945 3.48136 15.1165L3.48127 15.1165C2.67731 15.7013 1.76606 16.3639 0 16.3639V19.3639C1.76606 19.3639 2.67731 18.7013 3.48131 18.1165L3.48141 18.1165C4.19925 17.5945 4.76626 17.1821 6.00019 17.1821C7.23412 17.1821 7.80112 17.5945 8.51897 18.1165L8.51906 18.1165C9.32306 18.7013 10.2343 19.3639 12.0004 19.3639C13.7664 19.3639 14.6777 18.7013 15.4815 18.1165C16.1993 17.5945 16.7663 17.1821 18.0003 17.1821C19.2342 17.1821 19.8012 17.5945 20.519 18.1165C21.3229 18.7013 22.234 19.3639 24 19.3639V16.3639C22.234 16.3639 21.3229 15.7013 20.519 15.1165ZM18.0003 9.27295C19.2342 9.27295 19.8012 9.68531 20.519 10.2074C21.3229 10.7921 22.234 11.4548 24 11.4548V14.7275C22.7662 14.7275 22.1992 14.3152 21.4814 13.7931L21.4814 13.7931C20.6775 13.2084 19.7663 12.5457 18.0003 12.5457C16.2343 12.5457 15.3231 13.2084 14.5192 13.7931C13.8014 14.3152 13.2344 14.7275 12.0004 14.7275C10.7664 14.7275 10.1994 14.3152 9.4816 13.7932L9.4815 13.7931C8.6775 13.2084 7.76625 12.5457 6.00019 12.5457C4.23413 12.5457 3.32283 13.2084 2.51888 13.7931L2.51878 13.7932C1.80093 14.3152 1.23393 14.7275 0 14.7275V11.4548C1.76606 11.4548 2.67731 10.7921 3.48127 10.2074L3.48136 10.2073C4.19921 9.68527 4.76621 9.27295 6.00019 9.27295C7.23408 9.27295 7.80109 9.68525 8.51895 10.2072L8.51911 10.2074C9.32306 10.7921 10.2344 11.4547 12.0004 11.4547C13.7664 11.4547 14.6776 10.7921 15.4815 10.2074C16.1993 9.68531 16.7663 9.27295 18.0003 9.27295Z" fill="url(#paint0_linear)"/>\n' +
			'<defs>\n' +
			'<linearGradient id="paint0_linear" x1="-8.5" y1="16.6025" x2="2.90371" y2="-4.21366" gradientUnits="userSpaceOnUse">\n' +
			'<stop stop-color="#008054"/>\n' +
			'<stop offset="1" stop-color="#B4D88B"/>\n' +
			'</linearGradient>\n' +
			'</defs>\n' +
			'</svg>'
	},
}

// Объект данных TStoredData
let db: TStoredData | null = null;


// Репозиторий для хранения и предоставления данных в памяти сервера
export class InMemoryIDBRepository implements IInfoBlockDataRepository {

	//  -----------------------------------------------------------------------------------
	// |
	// | Загрузка данных во внутреннее хранилище TStoredData
	// |
	//  -----------------------------------------------------------------------------------

	setInputData(inputData: TInputData) {
		const buildings = {};
		let building: TBuilding;
		let area: TArea;

		// Проходим по каждому зданию в сырых данных.
		for(const buildingNumber in inputData.data) {
			if(!Object.prototype.hasOwnProperty.call(inputData.data, buildingNumber)) break;
			const id = inputData.data[buildingNumber].id;
			const buildingHeader = InMemoryIDBRepository._setBuildingHeader(inputData.data[buildingNumber]);
			const buildingLocation = InMemoryIDBRepository._setBuildingLocation(inputData.data[buildingNumber]);
			const buildingInfo = InMemoryIDBRepository._setBuildingInfo(inputData.data[buildingNumber]);
			const buildingPhotos = InMemoryIDBRepository._setPhotos(inputData.data[buildingNumber].medias);
			const buildingPrimaryPhoto = InMemoryIDBRepository._setPrimaryPhoto(inputData.data[buildingNumber].medias, 842, 595);
			const areas = {}

			// Проходим по каждому помещению данного здания в сырых данных.
			for(const areaNumber in inputData.data[buildingNumber].realtyObjects) {
				const areaId = inputData.data[buildingNumber].realtyObjects[areaNumber].id;
				const areaPhotos: TMedia[] = InMemoryIDBRepository._setPhotos(inputData.data[buildingNumber].realtyObjects[areaNumber].medias);
				const areaSchema = InMemoryIDBRepository._setSchemaImage(inputData.data[buildingNumber].realtyObjects[areaNumber].medias,
					632, 303);

				for(const offerNumber in inputData.data[buildingNumber].realtyObjects[areaNumber].realtyOffers) {
					const offerId = inputData.data[buildingNumber].realtyObjects[areaNumber].realtyOffers[offerNumber].id;

					const areaCommercial = InMemoryIDBRepository._setAreaCommercial(
						inputData.data[buildingNumber].realtyObjects[areaNumber],
						inputData.data[buildingNumber].realtyObjects[areaNumber].realtyOffers[offerNumber],
						!!inputData.isNdsInclude
					);
					const primaryWidth = areaCommercial.terms.length > 2 ? 526 : 842;
					const primaryHeight = 595;
					const medias = inputData.data[buildingNumber].realtyObjects[areaNumber].medias;
					const areaPrimaryPhoto = InMemoryIDBRepository._setPrimaryPhoto( medias, primaryWidth, primaryHeight);

					area = {
						areaPhotos,
						areaPrimaryPhoto,
						areaSchema,
						areaCommercial,
					};

					// Добавляем в массив DB
					areas[`${areaId}_${offerId}`] = area;

				}
			}

			building = {
				buildingHeader,
				buildingLocation,
				buildingInfo,
				buildingPhotos,
				buildingPrimaryPhoto,
				areas,
			}
			buildings[id] = building;
		}

		db = {
			isGreyscalePhotos: inputData.isGreyscalePhotos,
			isNdsInclude: !!inputData.isNdsInclude,
			baseHeaderData: InMemoryIDBRepository._setBaseHeaderData(inputData.data),
			baseBrokerContacts: {
				avatarUrl: undefined,
				fio: inputData.broker ? inputData.broker.name : 'Нет данных',
				email: inputData.broker && inputData.broker.email ? inputData.broker.email : 'hello@realtyguide.ru',
				personalPhone: inputData.broker ? inputData.broker.phone : 'Нет денных',
				desc: inputData.broker && inputData.broker.description ? inputData.broker.description : 'ваш персональный менеджер',
			},
			buildings,
		};

	}

	//  -----------------------------------------------------------------------------------
	// |
	// | Private-методы формирования данных в TStoredData из TInputData
	// |
	//  -----------------------------------------------------------------------------------

	public static _setBaseHeaderData(realties: TRealty[]) {
		let name: string;

		let operationRent = false;
		let operationSell = false;

		for(const buildingNumber in realties) {
			for(const areaNumber in realties[buildingNumber].realtyObjects) {
				for(const offerNumber in realties[buildingNumber].realtyObjects[areaNumber].realtyOffers) {
					switch (realties[buildingNumber].realtyObjects[areaNumber].realtyOffers[offerNumber].operation) {
						case "rent": operationRent = true; break;
						case "sell": operationSell = true; break;
					}
				}
			}
		}

		if(operationRent && !operationSell) {
			name = 'аренде';
		} else if(!operationRent && operationSell) {
			name = 'продаже';
		} else if (operationRent && operationSell) {
			name = 'аренде и продаже';
		} else {
			name = 'аренде или продаже';
		}

		return {
			name,
			logoLink: undefined,
		}
	}

	//  -----------------------------------------------------------------------------------
	public static _setBuildingHeader(realty: TRealty)
	{
		const features: TFeature[] = InMemoryIDBRepository._setKeyFeatures(realty, false);

		return {
			features,
			prefix: realty.prefix,
			name: realty.name,
		};
	}

	//  -----------------------------------------------------------------------------------
	public static _setKeyFeatures(realty: TRealty, withFloor: boolean = false): TFeature[]
	{
		const features = [];

		if(realty.buildingClassLetter) {
			const feature = {
				name: realty.buildingClassLetter,
				desc: 'класс',
				width: 38,
				order: 0,
			}
			features.push(feature);
		}
		if(withFloor && realty.building.floors) {
			const feature = {
				name: realty.building.floors,
				desc: 'этажность',
				width: 73,
				order: 1,
			}
			features.push(feature);
		}
		if(realty.taxSvcNumber) {
			const feature = {
				name: realty.taxSvcNumber.toString(),
				desc: 'налоговая',
				width: 69,
				order: withFloor ? 3 : 2,
			}
			features.push(feature);
		}
		if(realty.building.squareTotal) {
			const feature = {
				name: unitFormat({})(Math.round(Number(realty.building.squareTotal))),
				svgSuffixWhite: '<svg width="26" height="21" viewBox="0 0 26 21" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
				'<path d="M0.12793 21H3.05593L3.48793 14.376C3.53593 13.56 3.46393 12.288 3.46393 12.288H3.51193C3.51193 12.288 3.91993 13.248 4.25593 14.088L6.65593 19.464H9.17593L11.5759 14.064C11.9599 13.2 12.2959 12.288 12.2959 12.288H12.3439C12.3439 12.288 12.2959 13.56 12.3199 14.376L12.7519 21H15.6799L14.5759 8.76002H11.1679L8.52793 15.072C8.26393 15.768 7.92793 16.632 7.92793 16.632H7.87993C7.87993 16.632 7.56793 15.744 7.27993 15.072L4.68793 8.76002H1.23193L0.12793 21Z" fill="white"/>\n' +
				'<path d="M17.8679 10.848H25.1879V8.85602H20.2919C20.4839 7.10402 25.0439 6.76802 25.0439 3.33602C25.0439 1.24802 23.3159 0.0720215 21.3959 0.0720215C19.9319 0.0720215 18.5639 0.888021 17.8679 1.96802L19.3559 3.28802C19.8359 2.73602 20.4839 2.18402 21.2759 2.18402C22.0919 2.18402 22.7399 2.68802 22.7399 3.43202C22.7399 5.52002 17.7719 5.71202 17.7719 9.86402C17.7719 10.152 17.8199 10.512 17.8679 10.848Z" fill="white"/>\n' +
				'</svg>\n',
				svgSuffixBlack: '<svg width="26" height="21" viewBox="0 0 26 21" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
					'<path d="M0.12793 21H3.05593L3.48793 14.376C3.53593 13.56 3.46393 12.288 3.46393 12.288H3.51193C3.51193 12.288 3.91993 13.248 4.25593 14.088L6.65593 19.464H9.17593L11.5759 14.064C11.9599 13.2 12.2959 12.288 12.2959 12.288H12.3439C12.3439 12.288 12.2959 13.56 12.3199 14.376L12.7519 21H15.6799L14.5759 8.76002H11.1679L8.52793 15.072C8.26393 15.768 7.92793 16.632 7.92793 16.632H7.87993C7.87993 16.632 7.56793 15.744 7.27993 15.072L4.68793 8.76002H1.23193L0.12793 21Z" fill="#73C167"/>\n' +
					'<path d="M17.8679 10.848H25.1879V8.85602H20.2919C20.4839 7.10402 25.0439 6.76802 25.0439 3.33602C25.0439 1.24802 23.3159 0.0720215 21.3959 0.0720215C19.9319 0.0720215 18.5639 0.888021 17.8679 1.96802L19.3559 3.28802C19.8359 2.73602 20.4839 2.18402 21.2759 2.18402C22.0919 2.18402 22.7399 2.68802 22.7399 3.43202C22.7399 5.52002 17.7719 5.71202 17.7719 9.86402C17.7719 10.152 17.8199 10.512 17.8679 10.848Z" fill="#73C167"/>\n' +
					'</svg>\n',
				svgSuffixOffset: 0,
				svgSuffixMarginTop: 7,
				desc: 'площадь',
				width: 0,
				order: withFloor ? 2 : 3,
			};
			feature.svgSuffixOffset = getStringWidth(feature.name, 24) + 3;
			feature.width = feature.svgSuffixOffset + 26;
			features.push(feature);
		}
		if(realty.building.buildYear) {
			const feature = {
				name: Math.round(Number(realty.building.buildYear)).toString(),
				desc: 'год постройки',
				width: 99,
			}
			features.push(feature);
		}
		features.sort((featureA, featureB) => featureA.order - featureB.order);

		return features;
	}

	//  -----------------------------------------------------------------------------------
	public static _setBuildingLocation(realty: TRealty)
	{
		let subwayStations = '';
		let roads = '';
		let baseDistance = Infinity;

		if(realty.address.subwayStations) {
			realty.address.subwayStations.forEach((station, index, stations) => {
				subwayStations += `${station.name}`; // `${station.name} (${station.lineName})`;
				if (index < stations.length - 1) {
					subwayStations += ', ';
				}
				if (baseDistance > station.distance) {
					baseDistance = station.distance;
				}
			});
		}

		const isSubway = !!subwayStations;
		if(!isSubway) {
			realty.address.highways.forEach((highway, index, highways) => {
				roads += highway.name
				if(index < highways.length - 1) {
					roads += ', ';
				}
				if(baseDistance > highway.distance) {
					baseDistance = highway.distance;
				}
			});
		}

		const infrastructure: {key: TAllInfrastructures, svg: string, priority: number}[] = [];
		if(realty.outer.infrastructure) {
			const arrays = realty.outer.infrastructure.split(', ');
			arrays.forEach((value: TAllInfrastructures) => {
				if(Object.prototype.hasOwnProperty.call(infrastructureData, value)) {
					let isAdded = true;

					// Схлопываем рынок и магазин
					if(value === 'groceryStore') {
						isAdded = infrastructure.find(itemInfra => itemInfra.key === 'groceryMarket') ? false : isAdded;
					}
					if(value === 'groceryMarket') {
						isAdded = infrastructure.find(itemInfra => itemInfra.key === 'groceryStore') ? false : isAdded;
					}

					// Схлопываем кафе и ресторан
					if(value === 'cafe') {
						isAdded = infrastructure.find(itemInfra => itemInfra.key === 'restaurant') ? false : isAdded;
					}
					if(value === 'restaurant') {
						isAdded = infrastructure.find(itemInfra => itemInfra.key === 'cafe') ? false : isAdded;
					}

					if(isAdded) {
						let isFind = false;
						let position = 0;
						const priority = infrastructureData[value].priority;
						for (; position < infrastructure.length && !isFind;) {
							if (infrastructure[position].priority > priority) {
								isFind = true;
							} else {
								position++;
							}
						}
						infrastructure.splice(position, 0, {key: value, priority, svg: infrastructureData[value].svg});
					}
				}
			});
		}

		return {
			isSubway,
			subwayStations,
			roads,
			infrastructure,
			distance: baseDistance,
			location: realty.address.fullAddress,
			description: realty.outer.anons ? realty.outer.anons : '',
			map: {
				lat: realty.address.lat,
				lng: realty.address.lng
			}
		};
	}

	//  -----------------------------------------------------------------------------------
	public static _setBuildingInfo(realty: TRealty): {keyFeatures: TFeature[], characteristics: TCharacteristic[]}
	{

		const keyFeatures: TFeature[] = InMemoryIDBRepository._setKeyFeatures(realty, true);
		const characteristics: TCharacteristic[] = [];

		// Электроснабжение
		if(realty.inner?.powerType) {
			let param = '';
			let value = '';

			switch (realty.inner.powerType) {
				case "none":
					param = 'Электроснабжение';
					break;
				case "autonomous":
					param = 'Электроснабжение';
					value = 'автономное';
					break;
				case "central":
					param = 'Электроснабжение';
					value = 'центральное';
					break;
				case "no":
					param = 'Электроснабжение';
					value = 'отсутствует';
					break;
			}

			if(realty.inner?.powerAmount) {
				if(realty.inner?.powerAmountPerMeter) {
					value += (value ? ', ' : '') + `${realty.inner.powerAmount} кВт, ${realty.inner.powerAmountPerMeter} кВт/м²`;
				} else {
					value += (value ? ', ' : '') + `${realty.inner.powerAmount} кВт`;
				}
			}

			characteristics.push({
				icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
					'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
					'<path d="M8.02848 20.9442C8.23551 21.0553 8.4922 20.9958 8.62954 20.8063L16.1295 10.4626C16.233 10.32 16.2476 10.1314 16.1676 9.97445C16.0875 9.81751 15.9262 9.7187 15.75 9.7187H13.7626L16.1527 5.70872C16.239 5.56387 16.2409 5.38381 16.1576 5.23719C16.0743 5.09056 15.9187 5 15.75 5H10.1251C9.90979 5 9.7222 5.14662 9.6702 5.3555L7.7952 12.8867C7.76036 13.0267 7.79192 13.175 7.88073 13.2886C7.96958 13.4023 8.1058 13.4687 8.25005 13.4687H10.3871L7.81095 20.3672C7.72889 20.5869 7.82183 20.8334 8.02848 20.9442ZM11.5017 13.164C11.5555 13.0201 11.5353 12.8589 11.4477 12.7327C11.3601 12.6065 11.2162 12.5312 11.0626 12.5312H8.84982L10.4914 5.9375H14.925L12.5349 9.94748C12.4486 10.0923 12.4467 10.2724 12.53 10.419C12.6133 10.5656 12.769 10.6562 12.9376 10.6562H14.8312L9.89676 17.4616L11.5017 13.164Z" fill="#7B7B7B"/>\n' +
					'</svg>',
				param,
				value,
			})
		}

		// Водоснабжение
		if(realty.land?.watersupply && realty.land.watersupply !== 'none') {
			let value = '';
			switch (realty.land.watersupply) {
				case "inside":
					value = 'на участке';
					break;
				case "onTheEdge":
					value = 'по границе участка';
					break;
				case "no":
					value = 'отсутствует';
					break;
			}

			characteristics.push({
				icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
					'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
					'<path d="M15.7812 9.625H14.3132C14.055 9.37288 13.7552 9.16431 13.4344 9.00909L13.4344 7.75H14.0798C14.4208 8.05006 14.8594 8.21875 15.3125 8.21875C16.3464 8.21875 17.1875 7.37762 17.1875 6.34375C17.1875 5.30988 16.3464 4.46875 15.3125 4.46875C14.8594 4.46875 14.4208 4.63744 14.0798 4.9375H13.3572C13.1637 4.39184 12.6424 4 12.0312 4C11.4201 4 10.8988 4.39184 10.7053 4.9375H9.98272C9.64169 4.63744 9.20309 4.46875 8.75 4.46875C7.71613 4.46875 6.875 5.30988 6.875 6.34375C6.875 7.37762 7.71613 8.21875 8.75 8.21875C9.20309 8.21875 9.64169 8.05006 9.98275 7.75H10.625V9.00909C10.3042 9.16431 10.0075 9.37288 9.74928 9.625H6.8125V9.15625C6.8125 7.86391 5.76109 6.8125 4.46875 6.8125C4.20987 6.8125 4 7.02238 4 7.28125V16.7188C4 16.9776 4.20987 17.1875 4.46875 17.1875C5.76109 17.1875 6.8125 16.1361 6.8125 14.8438V14.375H9.74934C10.3625 14.9733 11.1827 15.3125 12.0312 15.3125C12.8798 15.3125 13.7 14.9733 14.3132 14.375H14.8438C15.1022 14.375 15.3125 14.5853 15.3125 14.8438V16.7188C15.3125 16.9776 15.5224 17.1844 15.7812 17.1844H16.8482C16.354 18.051 16.3788 18.0029 16.3592 18.0497C15.9728 18.9707 16.6497 20 17.6562 20C18.4317 20 19.0625 19.3692 19.0625 18.5938C19.0625 18.3477 18.9912 18.1088 18.9279 17.9983L18.4643 17.1875H19.5312C19.7901 17.1875 20 16.9776 20 16.7188V13.9062C20 11.5834 18.1215 9.625 15.7812 9.625ZM5.875 14.8438C5.875 15.4549 5.48316 15.9762 4.9375 16.1697V7.83031C5.48316 8.02378 5.875 8.54509 5.875 9.15625C5.875 9.84969 5.875 14.1154 5.875 14.8438ZM17.6562 19.0625C17.3306 19.0625 17.1057 18.738 17.2151 18.4345L17.6562 17.663L18.0974 18.4345C18.207 18.7384 17.9814 19.0625 17.6562 19.0625ZM19.0625 16.25H16.25V15.3125H19.0625V16.25ZM19.0625 14.375H16.1694C15.9759 13.8294 15.4548 13.4375 14.8438 13.4375H14.1138C13.981 13.4375 13.8545 13.4938 13.7656 13.5925C13.311 14.0971 12.6951 14.375 12.0312 14.375C11.3674 14.375 10.7515 14.0971 10.2969 13.5925C10.208 13.4938 10.0814 13.4375 9.94863 13.4375H6.8125V10.5625H9.94866C10.0815 10.5625 10.208 10.5062 10.2969 10.4075C10.5607 10.1147 10.8913 9.89097 11.2528 9.76053C11.4387 9.6935 11.5625 9.51716 11.5625 9.31959V7.28125C11.5625 7.02238 11.3527 6.8125 11.0938 6.8125H9.79131C9.6585 6.8125 9.53191 6.86884 9.443 6.96756C9.26078 7.16984 9.01469 7.28125 8.75 7.28125C8.23306 7.28125 7.8125 6.86069 7.8125 6.34375C7.8125 5.82681 8.23306 5.40625 8.75 5.40625C9.01469 5.40625 9.26078 5.51766 9.443 5.71994C9.53187 5.81866 9.65847 5.875 9.79128 5.875H11.0938C11.3526 5.875 11.5625 5.66513 11.5625 5.40625C11.5625 5.14778 11.7728 4.9375 12.0312 4.9375C12.2897 4.9375 12.5 5.14778 12.5 5.40625C12.5 5.66513 12.7099 5.875 12.9688 5.875H14.2712C14.4041 5.875 14.5307 5.81866 14.6195 5.71994C14.8017 5.51766 15.0478 5.40625 15.3125 5.40625C15.8294 5.40625 16.25 5.82681 16.25 6.34375C16.25 6.86069 15.8294 7.28125 15.3125 7.28125C15.0478 7.28125 14.8017 7.16984 14.6195 6.96756C14.5306 6.86884 14.4041 6.8125 14.2712 6.8125H12.9688C12.7099 6.8125 12.5 7.02238 12.5 7.28125L12.5 9.31959C12.5 9.51716 12.6238 9.6935 12.8097 9.76053C13.1713 9.891 13.5018 10.1147 13.7656 10.4075C13.8544 10.5062 13.981 10.5625 14.1138 10.5625H15.7812C17.5905 10.5625 19.0625 12.0625 19.0625 13.9062V14.375Z" fill="#7B7B7B"/>\n' +
					'</svg>\n',
				param: 'Водоснабжение',
				value,
			})
		}

		// Отопление
		if(realty.inner?.heating && realty.inner.heating !== 'none') {
			let value = '';
			switch (realty.inner.heating) {
				case "central":
					value = 'центральное';
					break;
				case "autonomous":
					value = 'автономное';
					break;
				case "no":
					value = 'отсутствует';
					break;
			}

			characteristics.push({
				icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
					'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
					'<path d="M17.8547 7.64247V7.53938C17.8547 6.68694 17.1613 5.99341 16.3088 5.99341C15.8902 5.99341 15.5102 6.16088 15.2316 6.432C14.9529 6.16088 14.5729 5.99341 14.1544 5.99341C13.7358 5.99341 13.3558 6.16088 13.0772 6.432C12.7985 6.16088 12.4185 5.99341 12 5.99341C11.5814 5.99341 11.2014 6.16088 10.9227 6.432C10.6441 6.16088 10.2641 5.99341 9.84556 5.99341C9.427 5.99341 9.047 6.16088 8.76834 6.432C8.48969 6.16088 8.10972 5.99341 7.69116 5.99341C6.83872 5.99341 6.14519 6.68691 6.14519 7.53938V7.64247H4.9375V7.15619H4V10.9412H4.9375V10.4549H6.14522V17.454C6.14522 18.3064 6.83872 18.9999 7.69119 18.9999C8.10975 18.9999 8.48975 18.8325 8.76837 18.5613C9.04703 18.8325 9.427 18.9999 9.84559 18.9999C10.2642 18.9999 10.6442 18.8325 10.9228 18.5613C11.2014 18.8325 11.5814 18.9999 12 18.9999C12.4186 18.9999 12.7986 18.8325 13.0772 18.5613C13.3559 18.8325 13.7358 18.9999 14.1544 18.9999C14.573 18.9999 14.953 18.8325 15.2316 18.5613C15.5103 18.8325 15.8902 18.9999 16.3088 18.9999C17.1612 18.9999 17.8548 18.3064 17.8548 17.454V10.455H20V7.64247H17.8547ZM6.14522 9.51747H4.9375V8.57997H6.14522V9.51747ZM8.29962 17.454C8.29962 17.7895 8.02669 18.0624 7.69119 18.0624C7.35569 18.0624 7.08272 17.7895 7.08272 17.454V7.53938C7.08272 7.20388 7.35566 6.93091 7.69119 6.93091C8.02669 6.93091 8.29962 7.20385 8.29962 7.53938V17.454ZM10.454 17.454C10.454 17.7895 10.1811 18.0624 9.84559 18.0624C9.51009 18.0624 9.23712 17.7895 9.23712 17.454V7.53938C9.23712 7.20388 9.51006 6.93091 9.84559 6.93091C10.1811 6.93091 10.454 7.20385 10.454 7.53938V17.454ZM12.6084 17.454C12.6084 17.7895 12.3355 18.0624 12 18.0624C11.6645 18.0624 11.3915 17.7895 11.3915 17.454V7.53938C11.3915 7.20388 11.6645 6.93091 12 6.93091C12.3355 6.93091 12.6085 7.20385 12.6085 7.53938V17.454H12.6084ZM14.7628 17.454C14.7628 17.7895 14.4899 18.0624 14.1544 18.0624C13.8189 18.0624 13.5459 17.7895 13.5459 17.454V7.53938C13.5459 7.20388 13.8189 6.93091 14.1544 6.93091C14.4899 6.93091 14.7628 7.20385 14.7628 7.53938V17.454ZM16.9172 17.454C16.9172 17.7895 16.6443 18.0624 16.3088 18.0624C15.9733 18.0624 15.7003 17.7895 15.7003 17.454V7.53938C15.7003 7.20388 15.9733 6.93091 16.3088 6.93091C16.6443 6.93091 16.9172 7.20385 16.9172 7.53938V17.454ZM19.0625 9.51747H17.8547V8.57997H19.0625V9.51747Z" fill="#7B7B7B"/>\n' +
					'<path d="M11.5312 3H12.4687V5.18331H11.5312V3Z" fill="#7B7B7B"/>\n' +
					'<path d="M9.65619 3.625H10.5937V5.18331H9.65619V3.625Z" fill="#7B7B7B"/>\n' +
					'<path d="M13.4062 3.625H14.3437V5.18331H13.4062V3.625Z" fill="#7B7B7B"/>\n' +
					'</svg>\n',
				param: 'Отопление',
				value,
			})
		}

		// Система вентиляции
		if(realty.inner?.ventilation) {
			let value: string = '';
			switch (realty.inner.ventilation) {
				case "none":
					value = 'отсутствует';
					break;
				case "natural":
					value = 'естественная вентиляция';
					break;
				case "supply":
					value = 'приточная вентиляция';
					break;
				case "supplyExhaust":
					value = 'приточно-вытяжная вентиляция';
					break;
			}

			characteristics.push({
				icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
					'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
					'<path d="M19.8149 13.1967L19.735 12.9496L18.2093 12.5675C18.2187 12.4291 18.223 12.2902 18.223 12.1499C18.223 10.3711 17.459 8.67395 16.127 7.49353L15.5054 8.19483C16.6371 9.19751 17.2859 10.6392 17.2859 12.1499C17.2859 12.212 17.285 12.2739 17.2825 12.3355L16.2919 12.0874C16.2778 11.115 15.9318 10.1707 15.313 9.4209L14.5901 10.0176C15.0199 10.538 15.2814 11.1796 15.342 11.8496L14.3324 11.5969C14.2234 11.1365 13.9806 10.7269 13.6476 10.4117L15.1826 5.05664L15.009 4.86389C14.2649 4.03699 13.1691 3.5625 12.0029 3.5625C10.8368 3.5625 9.74134 4.03699 8.9972 4.86389L8.82349 5.05664L9.25623 6.56665C8.91663 6.73438 8.59046 6.93433 8.28126 7.16577C7.23633 7.94702 6.44849 9.06043 6.06275 10.3003L6.95765 10.5786C7.38343 9.20911 8.31836 8.1167 9.51831 7.48096L9.80127 8.46875C9.43262 8.68933 9.09534 8.9657 8.80359 9.29224L9.50232 9.91663C9.67347 9.7251 9.86475 9.55554 10.0712 9.41053L10.3583 10.4121C10.0271 10.7257 9.78504 11.1327 9.67542 11.5903L8.6648 11.8406C8.69947 11.4536 8.80042 11.0806 8.96631 10.7275L8.1178 10.3293C7.85987 10.879 7.724 11.4663 7.71399 12.0758L4.26905 12.9286L4.18836 13.1754C3.84229 14.2328 3.9773 15.419 4.5586 16.4301C5.1399 17.4409 6.09705 18.1544 7.18482 18.3875L7.43873 18.4418L8.5337 17.3126C9.55359 17.9985 10.7596 18.3696 12.0029 18.3696C12.4321 18.3696 12.8607 18.3259 13.2771 18.2391L13.0859 17.3217C12.7323 17.3954 12.3682 17.4325 12.0029 17.4325C10.9814 17.4325 10.0177 17.1377 9.20057 16.6244L9.90967 15.8931C10.5292 16.2411 11.2433 16.4395 12.0029 16.4395V15.5023C11.4988 15.5023 11.0205 15.3905 10.5913 15.1899L11.3154 14.4428C11.5331 14.5083 11.7639 14.5436 12.0029 14.5436C12.2397 14.5436 12.4684 14.5093 12.6846 14.4446L16.5503 18.454L16.8042 18.4003C17.8926 18.1704 18.8519 17.4594 19.4358 16.4501C20.0199 15.4408 20.158 14.255 19.8149 13.1967ZM13.5411 13.9825C13.9619 13.629 14.2599 13.1335 14.3601 12.57L18.9906 13.7293C19.1595 14.4714 19.0309 15.2787 18.6248 15.9808C18.2184 16.6829 17.583 17.1967 16.8551 17.4201L13.5411 13.9825ZM9.87098 5.31067C10.4288 4.79273 11.192 4.49963 12.0029 4.49963C12.8142 4.49963 13.5774 4.79273 14.1349 5.31067L12.8198 9.89954C12.5649 9.8064 12.2897 9.75574 12.0029 9.75574C11.7162 9.75574 11.4409 9.8064 11.186 9.89954L9.87098 5.31067ZM7.13672 17.4069C6.40943 17.1816 5.77528 16.6659 5.3711 15.9628C4.96693 15.2596 4.8401 14.4522 5.01124 13.7105L9.64515 12.5635C9.74378 13.1276 10.0403 13.624 10.4605 13.9785L7.13672 17.4069ZM10.5463 12.1499C10.5463 11.3464 11.1998 10.6929 12.0029 10.6929C12.8064 10.6929 13.4598 11.3464 13.4598 12.1499C13.4598 12.953 12.8064 13.6065 12.0029 13.6065C11.1998 13.6066 10.5463 12.953 10.5463 12.1499Z" fill="#7B7B7B"/>\n' +
					'</svg>\n',
				param: 'Система вентиляции',
				value,
			})
		}

		// Пожаротушение
		if(realty.inner?.fireSafety) {
			let value: string = '';
			switch (realty.inner.fireSafety) {
				case "none":
					value = 'отсутствует';
					break;
				case "alarm":
					value = 'сигнализация';
					break;
				case "autoFireFightingSystem":
					value = 'автоматическая';
					switch (realty.inner.autoFireFightingSystem) {
						case "aerosol": value += ': аэрозольная'; break;
						case "water": value += ': водяная'; break;
						case "powder": value += ': порошковая'; break;
						case "gas": value += ': газовая'; break;
						case "foam": value += ': пенная'; break;
					}
					break;
			}

			characteristics.push({
				icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
					'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
					'<path d="M17.0198 4.88281H13.6604V4.41016C13.6604 3.63259 13.0278 3 12.2503 3C11.4727 3 10.8401 3.63259 10.8401 4.41016V4.90428C8.20501 5.14197 6.13307 7.36269 6.13307 10.0586V10.5312H5.21441L4.98022 15.2344H8.22338L7.98919 10.5312H7.07057V10.0586C7.07057 7.88003 8.72288 6.08041 10.8401 5.84637V7.08328C9.72794 7.6125 8.95729 8.74719 8.95729 10.0586V19H15.5432V10.0586C15.5432 8.74719 14.7726 7.6125 13.6604 7.08325V5.99741C14.6367 6.34516 15.559 6.82247 16.4092 7.42159L16.9492 6.65528C16.5113 6.34672 16.0556 6.06841 15.5845 5.82034H17.0198V4.88281ZM7.23804 14.2969H5.96557L6.10638 11.4688H7.09722L7.23804 14.2969ZM12.2503 3.9375C12.5109 3.9375 12.7229 4.14953 12.7229 4.41016C12.7229 4.67078 12.5109 4.88281 12.2503 4.88281C11.9896 4.88281 11.7776 4.67078 11.7776 4.41016C11.7776 4.14953 11.9896 3.9375 12.2503 3.9375ZM9.89479 11.4688H14.6057V12.4141H9.89479V11.4688ZM9.89479 18.0625V13.3516H14.6057V18.0625H9.89479ZM14.6057 10.0586V10.5312H9.89479V10.0586C9.89479 8.75978 10.9514 7.70312 12.2503 7.70312C13.5491 7.70312 14.6057 8.75978 14.6057 10.0586ZM12.2503 6.76562C12.0898 6.76562 11.932 6.77741 11.7776 6.79969V5.73856C11.9254 5.79134 12.0845 5.82031 12.2503 5.82031C12.416 5.82031 12.5751 5.79134 12.7229 5.73856V6.79969C12.5685 6.77741 12.4107 6.76562 12.2503 6.76562Z" fill="#7B7B7B"/>\n' +
					'</svg>\n',
				param: 'Система пожаротушения',
				value,
			})
		}

		// Кондиционирование
		if(realty.inner?.airConditioning) {
			let value: string = '';
			switch (realty.inner.airConditioning) {
				case "none":
					value = 'отсутствует';
					break;
				case "unknown":
					value = 'присутствует';
					break;
				case "split":
					value = 'сплит-системы';
					break;
				case "multiSplit":
					value = 'мультисплит-системы';
					break;
				case "vrf":
					value = 'мультизональная система (VRF)';
					break;
				case "chillerFancoil":
					value = 'чиллер-фанкойл система';
					break;
			}
			characteristics.push({
				icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
					'<path d="M19.5312 11.5312H18.8027L19.1598 10.9127C19.2893 10.6885 19.2124 10.4017 18.9882 10.2723C18.764 10.1428 18.4773 10.2197 18.3479 10.4439L17.7201 11.5312H13.1317L16.3762 8.28666L17.5889 8.61159C17.6296 8.6225 17.6704 8.62772 17.7106 8.62772C17.9175 8.62772 18.107 8.48959 18.1631 8.28019C18.2301 8.03012 18.0817 7.77306 17.8316 7.70606L17.1417 7.52119L17.6127 7.05019C17.7957 6.86716 17.7957 6.57034 17.6127 6.38728C17.4297 6.20425 17.1328 6.20425 16.9498 6.38728L16.4788 6.85831L16.2939 6.16837C16.2268 5.91831 15.9699 5.77012 15.7198 5.83694C15.4697 5.90397 15.3213 6.161 15.3883 6.41106L15.7133 7.62381L12.4688 10.8683V6.27981L13.5561 5.65206C13.7803 5.52262 13.8571 5.23597 13.7276 5.01175C13.5982 4.7875 13.3115 4.71072 13.0873 4.84019L12.4688 5.19731V4.46875C12.4688 4.20987 12.2589 4 12 4C11.7411 4 11.5312 4.20987 11.5312 4.46875V7.33584C9.16581 7.57178 7.3125 9.57347 7.3125 12C7.3125 14.4265 9.16581 16.4282 11.5312 16.6641V19.5312C11.5312 19.7901 11.7411 19.9999 12 19.9999C12.2589 19.9999 12.4688 19.7901 12.4688 19.5312V18.8027L13.0873 19.1598C13.1611 19.2024 13.2417 19.2227 13.3212 19.2227C13.4833 19.2227 13.6408 19.1386 13.7276 18.9882C13.8571 18.764 13.7803 18.4773 13.5561 18.3479L12.4688 17.7201V13.1316L15.7133 16.3762L15.3883 17.5889C15.3213 17.839 15.4697 18.096 15.7198 18.163C15.7605 18.1739 15.8012 18.1791 15.8414 18.1791C16.0484 18.1791 16.2378 18.041 16.2939 17.8316L16.4788 17.1417L16.9497 17.6127C17.0413 17.7042 17.1612 17.75 17.2812 17.75C17.4011 17.75 17.5211 17.7042 17.6126 17.6127C17.7957 17.4296 17.7957 17.1328 17.6126 16.9497L17.1416 16.4787L17.8316 16.2938C18.0816 16.2268 18.23 15.9698 18.163 15.7197C18.096 15.4697 17.839 15.3213 17.5889 15.3883L16.3761 15.7132L13.1317 12.4687H17.7202L18.3479 13.556C18.4347 13.7064 18.5923 13.7905 18.7543 13.7905C18.8338 13.7905 18.9144 13.7702 18.9882 13.7276C19.2124 13.5982 19.2893 13.3115 19.1598 13.0873L18.8027 12.4687H19.5312C19.7901 12.4687 20 12.2588 20 12C20 11.7411 19.7901 11.5312 19.5312 11.5312ZM8.25 12C8.25 10.0909 9.68391 8.51059 11.5312 8.27922V15.7207C9.68391 15.4893 8.25 13.909 8.25 12Z" fill="#7B7B7B"/>\n' +
					'<path d="M6.43919 12C6.43919 11.7411 6.22931 11.5312 5.97044 11.5312H4.46875C4.20987 11.5312 4 11.7411 4 12C4 12.2589 4.20987 12.4688 4.46875 12.4688H5.97044C6.22931 12.4688 6.43919 12.2589 6.43919 12Z" fill="#7B7B7B"/>\n' +
					'<path d="M7.40501 8.06789C7.49654 8.15945 7.61651 8.2052 7.73645 8.2052C7.85639 8.2052 7.97638 8.15942 8.06788 8.06789C8.25095 7.88486 8.25095 7.58808 8.06788 7.40498L7.00607 6.34311C6.82307 6.16004 6.52626 6.16004 6.34317 6.34311C6.16011 6.52614 6.16011 6.82292 6.34317 7.00601L7.40501 8.06789Z" fill="#7B7B7B"/>\n' +
					'<path d="M7.40501 15.9322L6.34317 16.994C6.16011 17.1771 6.16011 17.4739 6.34317 17.6569C6.4347 17.7485 6.55467 17.7943 6.67461 17.7943C6.79454 17.7943 6.91454 17.7485 7.00604 17.6569L8.06788 16.5951C8.25095 16.4121 8.25095 16.1153 8.06788 15.9322C7.88485 15.7492 7.58804 15.7492 7.40501 15.9322Z" fill="#7B7B7B"/>\n' +
					'<path d="M9.30562 6.58541C9.37933 6.76784 9.55496 6.87859 9.74033 6.87859C9.79883 6.87859 9.8583 6.86756 9.91586 6.84428C10.1559 6.74728 10.2718 6.47403 10.1747 6.23403L9.61193 4.84178C9.51493 4.60178 9.24165 4.48581 9.00168 4.58291C8.76168 4.67991 8.64574 4.95316 8.7428 5.19316L9.30562 6.58541Z" fill="#7B7B7B"/>\n' +
					'<path d="M6.84448 14.084C6.74748 13.844 6.4742 13.728 6.23423 13.8251L4.84201 14.3879C4.60201 14.4849 4.48607 14.7581 4.58314 14.9981C4.65689 15.1806 4.83248 15.2913 5.01785 15.2913C5.07635 15.2913 5.13582 15.2803 5.19339 15.257L6.5856 14.6942C6.8256 14.5972 6.94154 14.324 6.84448 14.084Z" fill="#7B7B7B"/>\n' +
					'<path d="M9.89128 17.1455C9.65165 17.0473 9.37797 17.1619 9.27978 17.4014L8.71031 18.791C8.61212 19.0305 8.72675 19.3043 8.96628 19.4025C9.02447 19.4263 9.08465 19.4376 9.14387 19.4376C9.32843 19.4376 9.50347 19.3278 9.57781 19.1465L10.1473 17.757C10.2454 17.5174 10.1308 17.2437 9.89128 17.1455Z" fill="#7B7B7B"/>\n' +
					'<path d="M4.85351 9.57789L6.24304 10.1473C6.3012 10.1712 6.36138 10.1824 6.4206 10.1824C6.6052 10.1824 6.7802 10.0727 6.85454 9.89132C6.95273 9.65179 6.8381 9.37801 6.59854 9.27986L5.20901 8.71042C4.96951 8.61226 4.6957 8.72686 4.59754 8.96642C4.49932 9.20595 4.61392 9.47973 4.85351 9.57789Z" fill="#7B7B7B"/>\n' +
					'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
					'</svg>\n',
				param: 'Кондиционирование',
				value,
			})
		}

		// Видеонаблюдение и Пропускная система
		if(realty.entry.type) {
			const types = realty.entry.type.split(', ');

			if(types.indexOf('video') !== -1) {
				characteristics.push({
					icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
						'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
						'<path d="M16.3053 11.9999H7.16667C6.52333 11.9999 6 11.4766 6 10.8333V6.49992C6 5.85659 6.52333 5.33325 7.16667 5.33325H17.3247C17.6833 5.33325 18.0167 5.49459 18.2393 5.77592C18.462 6.05659 18.5427 6.41792 18.4607 6.76725L17.4413 11.1006C17.3167 11.6299 16.8493 11.9999 16.3053 11.9999ZM7.16667 6.33325C7.07467 6.33325 7 6.40792 7 6.49992V10.8333C7 10.9253 7.07467 10.9999 7.16667 10.9999H16.3053C16.3833 10.9999 16.45 10.9466 16.468 10.8713L17.4873 6.53792C17.5033 6.46992 17.474 6.41992 17.4553 6.39659C17.4367 6.37325 17.3947 6.33325 17.3247 6.33325H7.16667Z" fill="#7B7B7B"/>\n' +
						'<path d="M17.3333 9.16675H6.5C6.224 9.16675 6 8.94275 6 8.66675C6 8.39075 6.224 8.16675 6.5 8.16675H17.3333C17.6093 8.16675 17.8333 8.39075 17.8333 8.66675C17.8333 8.94275 17.6093 9.16675 17.3333 9.16675Z" fill="#7B7B7B"/>\n' +
						'<path d="M18.8333 11.3334H17.22C16.944 11.3334 16.72 11.1094 16.72 10.8334C16.72 10.5574 16.944 10.3334 17.22 10.3334H18.8333C18.9253 10.3334 19 10.2587 19 10.1667V7.83341C19 7.74141 18.9253 7.66675 18.8333 7.66675H17.96C17.684 7.66675 17.46 7.44275 17.46 7.16675C17.46 6.89075 17.684 6.66675 17.96 6.66675H18.8333C19.4766 6.66675 20 7.19008 20 7.83341V10.1667C20 10.8101 19.4766 11.3334 18.8333 11.3334Z" fill="#7B7B7B"/>\n' +
						'<path d="M4.5 18.6667C4.224 18.6667 4 18.4427 4 18.1667V15.1667C4 14.8907 4.224 14.6667 4.5 14.6667H6.83333C7.10933 14.6667 7.33333 14.8907 7.33333 15.1667V15.8334C7.33333 17.3954 6.062 18.6667 4.5 18.6667ZM5 15.6667V17.5974C5.76867 17.3794 6.33333 16.6707 6.33333 15.8334V15.6667H5Z" fill="#7B7B7B"/>\n' +
						'<path d="M10.1667 17.3334H6.64001C6.36401 17.3334 6.14001 17.1094 6.14001 16.8334C6.14001 16.5574 6.36401 16.3334 6.64001 16.3334H10.1667C10.626 16.3334 11 15.9594 11 15.5001V13.6667C11 13.3907 11.224 13.1667 11.5 13.1667C11.776 13.1667 12 13.3907 12 13.6667V15.5001C12 16.5114 11.1773 17.3334 10.1667 17.3334Z" fill="#7B7B7B"/>\n' +
						'<path d="M13.5 14.0001H9.83335C9.19002 14.0001 8.66669 13.4767 8.66669 12.8334V11.6667C8.66669 11.3907 8.89069 11.1667 9.16669 11.1667C9.44269 11.1667 9.66669 11.3907 9.66669 11.6667V12.8334C9.66669 12.9254 9.74135 13.0001 9.83335 13.0001H13.5C13.592 13.0001 13.6667 12.9254 13.6667 12.8334V11.6667C13.6667 11.3907 13.8907 11.1667 14.1667 11.1667C14.4427 11.1667 14.6667 11.3907 14.6667 11.6667V12.8334C14.6667 13.4767 14.1434 14.0001 13.5 14.0001Z" fill="#7B7B7B"/>\n' +
						'</svg>\n',
					param: 'Видеонаблюдение',
					value: '',
				})
			}

			if(types.indexOf('postControl') !== -1) {
				characteristics.push({
					icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
						'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
						'<path d="M6.94733 8.11328H6.00738V9.05323H6.94733V8.11328Z" fill="#7B7B7B"/>\n' +
						'<path d="M6.93259 6.2334H5.99264V7.17335H6.93259V6.2334Z" fill="#7B7B7B"/>\n' +
						'<path d="M9.85684 6.2334H7.87251V7.17335H9.85684V6.2334Z" fill="#7B7B7B"/>\n' +
						'<path d="M13.295 4.00244V6.32245L12.4064 7.21114L13.279 8.08375H20V10.8876H15.2634L19.2463 14.8704L17.2637 16.853L13.1759 12.7651V18.4008H10.3721V10.9902L9.49969 10.1178L9.28247 10.3351V19.9972H4.00003V4.00244H13.295ZM19.0601 9.0237H13.279L12.3551 9.94761H19.0601V9.0237ZM17.2637 15.5237L17.917 14.8704L13.9342 10.8876H13.1759V11.4359L17.2637 15.5237ZM12.2359 17.4609V10.8876H11.4151L11.312 10.9907V17.4609H12.2359V17.4609ZM10.8423 10.1311L12.4196 8.55376L11.7417 7.87581L10.1643 9.45323L10.8423 10.1311ZM4.93995 19.0573H8.34249V9.94573L12.3551 5.93309V4.94239H4.93995V19.0573Z" fill="#7B7B7B"/>\n' +
						'</svg>',
					param: 'Пропускная система',
					value: '',
				})
			}
		}

		// Телефония
		if(realty.communicate?.phoneProviders) {
			let value = `${realty.communicate.phoneProviders} провайдер`;
			const units = realty.communicate?.phoneProviders >= 20 ?  realty.communicate?.phoneProviders % 10 : realty.communicate?.phoneProviders;
			switch (units) {
				case 1: break;
				case 2:
				case 3:
				case 4: value += 'а'; break;
				default: value += 'ов'; break;
			}
			characteristics.push({
				icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
					'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
					'<path d="M19.5889 16.4339L16.9379 13.7829C16.3884 13.2334 15.4991 13.2334 14.9496 13.7829L14.2869 14.4457C13.7386 14.9939 12.8467 14.9938 12.2964 14.4435L9.52073 11.7045C8.97254 11.1564 8.97254 10.2645 9.52073 9.71629L10.1835 9.05354C10.7317 8.50538 10.7317 7.61348 10.1835 7.06529L7.53251 4.41429C6.98432 3.8661 6.09235 3.86617 5.54426 4.41429L4.88157 5.07704C4.02132 5.93726 3.76832 7.83388 4.22129 10.0267C4.50998 11.4242 5.34051 14.1149 7.65942 16.4339C9.97363 18.7481 12.6425 19.5423 14.0274 19.8098C15.5497 20.1037 17.8374 20.1735 18.9261 19.0849L19.5889 18.4221C20.137 17.8739 20.137 16.982 19.5889 16.4339ZM6.20707 5.07704C6.38982 4.89432 6.68707 4.89429 6.86985 5.07704L9.52085 7.72804C9.7036 7.91079 9.7036 8.20807 9.52085 8.39082L9.19113 8.72054L5.87732 5.40679L6.20707 5.07704ZM14.2052 18.8895C12.9256 18.6424 10.4597 17.9087 8.32217 15.7711C6.17592 13.6248 5.4067 11.132 5.1392 9.8371C4.78485 8.12185 4.93238 6.83251 5.27645 6.13138L8.56135 9.41632C7.95851 10.3259 8.05757 11.5669 8.86023 12.3695L11.6359 15.1084C12.4363 15.9088 13.6765 16.0084 14.5869 15.4051L17.8744 18.6927C16.8726 19.2007 15.3146 19.1037 14.2052 18.8895ZM18.9261 17.7594L18.5964 18.0891L15.2826 14.7754L15.6124 14.4457C15.7955 14.2625 16.0919 14.2625 16.2751 14.4457L18.9261 17.0967C19.1088 17.2794 19.1088 17.5767 18.9261 17.7594Z" fill="#7B7B7B"/>\n' +
					'<path d="M12.9698 4.00366C12.711 4.00366 12.5012 4.21347 12.5012 4.47229C12.5012 4.7311 12.711 4.94091 12.9698 4.94091C16.329 4.94091 19.062 7.67388 19.062 11.0331C19.062 11.2919 19.2718 11.5018 19.5306 11.5018C19.7894 11.5018 19.9993 11.2919 19.9993 11.0331C19.9993 7.15707 16.8458 4.00366 12.9698 4.00366Z" fill="#7B7B7B"/>\n' +
					'<path d="M12.9698 5.87793C12.711 5.87793 12.5012 6.08774 12.5012 6.34655C12.5012 6.60537 12.711 6.81518 12.9698 6.81518C15.2954 6.81518 17.1875 8.70724 17.1875 11.0329C17.1875 11.2917 17.3973 11.5015 17.6561 11.5015C17.9149 11.5015 18.1247 11.2917 18.1247 11.0329C18.1247 8.19043 15.8122 5.87793 12.9698 5.87793Z" fill="#7B7B7B"/>\n' +
					'<path d="M12.9698 7.75269C12.711 7.75269 12.5012 7.9625 12.5012 8.22131C12.5012 8.48012 12.711 8.68994 12.9698 8.68994C14.2618 8.68994 15.3129 9.74106 15.3129 11.0331C15.3129 11.2919 15.5228 11.5017 15.7816 11.5017C16.0404 11.5017 16.2502 11.2919 16.2502 11.0331C16.2502 9.22428 14.7786 7.75269 12.9698 7.75269Z" fill="#7B7B7B"/>\n' +
					'<path d="M12.9698 9.6272C12.711 9.6272 12.5012 9.83701 12.5012 10.0958C12.5012 10.3546 12.711 10.5644 12.9698 10.5644C13.2282 10.5644 13.4384 10.7747 13.4384 11.0331C13.4384 11.2919 13.6482 11.5017 13.907 11.5017C14.1658 11.5017 14.3757 11.2919 14.3757 11.0331C14.3757 10.2579 13.745 9.6272 12.9698 9.6272Z" fill="#7B7B7B"/>\n' +
					'</svg>\n',
				param: 'Телефония',
				value,
			})
		}

		// Интернет
		if(realty.communicate?.internetProviders) {
			let value = `${realty.communicate.internetProviders} провайдер`;
			const units = realty.communicate?.internetProviders >= 20 ?  realty.communicate?.internetProviders % 10 : realty.communicate?.internetProviders;
			switch (units) {
				case 1: break;
				case 2:
				case 3:
				case 4: value += 'а'; break;
				default: value += 'ов'; break;
			}

			if(realty.features && realty.features.type && realty.features.type !== 'none') {
				const types = realty.features.type.split(', ');
				if (types.indexOf('anyInternet') !== -1) {
					value += ', возможны другие';
				}
			}

			characteristics.push({
				icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
					'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
					'<path d="M16.7892 12.974C16.5691 12.974 16.3523 12.8898 16.1841 12.7216C13.8736 10.4144 10.12 10.4144 7.80951 12.7216C7.47621 13.0549 6.93258 13.0549 6.59928 12.7216C6.26598 12.3883 6.26598 11.8446 6.59928 11.5113C9.57632 8.5343 14.4173 8.5343 17.3943 11.5113C17.7276 11.8446 17.7276 12.3883 17.3943 12.7216C17.226 12.8898 17.006 12.974 16.7892 12.974Z" fill="#7B7B7B"/>\n' +
					'<path d="M14.4722 15.2876C14.2522 15.2876 14.0354 15.2035 13.8671 15.0352C13.3688 14.5369 12.7022 14.2618 11.9968 14.2618C11.2913 14.2618 10.6247 14.5369 10.1264 15.0352C9.79311 15.3685 9.24947 15.3685 8.91617 15.0352C8.58287 14.7019 8.58287 14.1583 8.91617 13.825C9.7381 13.0031 10.8318 12.55 11.9968 12.55C13.1617 12.55 14.2554 13.0031 15.0774 13.8282C15.4107 14.1615 15.4107 14.7052 15.0774 15.0385C14.9123 15.2035 14.6923 15.2876 14.4722 15.2876Z" fill="#7B7B7B"/>\n' +
					'<path d="M11.9968 18.0512C12.6276 18.0512 13.1391 17.5397 13.1391 16.9089C13.1391 16.278 12.6276 15.7666 11.9968 15.7666C11.3659 15.7666 10.8545 16.278 10.8545 16.9089C10.8545 17.5397 11.3659 18.0512 11.9968 18.0512Z" fill="#7B7B7B"/>\n' +
					'<path d="M19.1417 10.6214C18.9216 10.6214 18.7048 10.5373 18.5366 10.369C14.9285 6.76418 9.06502 6.76418 5.46021 10.369C5.12691 10.7023 4.58327 10.7023 4.24997 10.369C3.91668 10.0357 3.91668 9.49206 4.24997 9.15876C6.32096 7.08777 9.07149 5.94873 12 5.94873C14.9285 5.94873 17.679 7.08777 19.75 9.15876C20.0833 9.49206 20.0833 10.0357 19.75 10.369C19.5785 10.5373 19.3585 10.6214 19.1417 10.6214Z" fill="#7B7B7B"/>\n' +
					'</svg>\n',
				param: 'Интернет',
				value,
			})
		}

		// Паркинг
		if(realty.parking.type && realty.parking.type !== 'none') {
			let value = '';

			switch (realty.parking.type) {
				case "natural": value = 'стихийная'; break;
				case "freeOpen": value = 'бесплатная открытая'; break;
				case "freeClosedWarm": value = 'бесплатная тёплая'; break;
				case "freeClosedCold": value = 'бесплатная закрытая'; break;
				case "paidOpen": value = 'платная открытая'; break;
				case "paidClosedCold": value = 'платная закрытая'; break;
				case "paidClosedWarm": value = 'платная теплая'; break;
				case "outsideTerritory": value = 'за территорией'; break;
				case "onTerritory": value = 'на территории'; break;
				case "underground": value = 'подземная'; break;
				case "roof": value = 'на крыше'; break;
			}

			if(realty.parking.placesTotal && realty.parking.placesTotal > 0) {
				value += `, ${realty.parking.placesTotal} мест`;
			}

			characteristics.push({
				icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
					'<path d="M13.1972 5.82349H8.90625V18.1769H10.3125V14.2609H13.1972C15.4836 14.2609 17.3438 12.4008 17.3438 10.1144V9.96995C17.3438 7.68363 15.4836 5.82349 13.1972 5.82349ZM15.9375 10.1145C15.9375 11.6254 14.7082 12.8547 13.1972 12.8547H10.3125V7.22974H13.1972C14.7082 7.22974 15.9375 8.45903 15.9375 9.97V10.1145Z" fill="#7B7B7B"/>\n' +
					'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
					'</svg>\n',
				param: 'Парковка',
				value,
			})

		}

		// Лифты
		if(realty.lift.type && realty.lift.type !== 'none') {
			let value = '';
			const types = realty.lift.type.split(', ');

			if(realty.lift.freightLifts > 0) {
				value += `${realty.lift.freightLifts} грузов${realty.lift.freightLifts === 1 ? 'ой' : 'ых'}`;
				if(realty.lift.freightTonnage) {
					value += ` ${realty.lift.freightTonnage} т`;
				}
			}
			if(realty.lift.passengerLifts > 0) {
				if(value) {
					value += `, `;
				} else {
					value = '';
				}
				value = `${realty.lift.passengerLifts} пассажирск${realty.lift.passengerLifts === 1 ? 'ий' : 'их'}`;
			}

			characteristics.push({
				icon: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
					'<circle cx="12" cy="12" r="11.5" stroke="#7B7B7B"/>\n' +
					'<path d="M19 4H5C4.74112 4 4.53125 4.20987 4.53125 4.46875V19.5312C4.53125 19.7901 4.74112 20 5 20H19C19.2589 20 19.4688 19.7901 19.4688 19.5312V4.46875C19.4688 4.20987 19.2589 4 19 4ZM18.5312 4.9375V17.0312H15.9688V8C15.9688 7.74113 15.7589 7.53125 15.5 7.53125H8.5C8.24113 7.53125 8.03125 7.74113 8.03125 8V17.0312H5.46875V4.9375H18.5312ZM5.46875 17.9688H8.03125V19.0625H5.46875V17.9688ZM8.96875 8.46875H11.5312V19.0625H8.96875V8.46875ZM12.4688 19.0625V8.46875H15.0312V19.0625H12.4688ZM15.9688 19.0625V17.9688H18.5312V19.0625H15.9688Z" fill="#7B7B7B"/>\n' +
					'<path d="M11.5 6.71875H12.5C12.7589 6.71875 12.9688 6.50888 12.9688 6.25C12.9688 5.99112 12.7589 5.78125 12.5 5.78125H11.5C11.2411 5.78125 11.0312 5.99112 11.0312 6.25C11.0312 6.50888 11.2411 6.71875 11.5 6.71875Z" fill="#7B7B7B"/>\n' +
					'<path d="M14.5 6.71875H15.5C15.7589 6.71875 15.9688 6.50888 15.9688 6.25C15.9688 5.99112 15.7589 5.78125 15.5 5.78125H14.5C14.2411 5.78125 14.0312 5.99112 14.0312 6.25C14.0312 6.50888 14.2411 6.71875 14.5 6.71875Z" fill="#7B7B7B"/>\n' +
					'<path d="M8.5 6.71875H9.5C9.75888 6.71875 9.96875 6.50888 9.96875 6.25C9.96875 5.99112 9.75888 5.78125 9.5 5.78125H8.5C8.24112 5.78125 8.03125 5.99112 8.03125 6.25C8.03125 6.50888 8.24112 6.71875 8.5 6.71875Z" fill="#7B7B7B"/>\n' +
					'<path d="M16.7903 12.0916C16.8424 12.343 17.0803 12.5086 17.3415 12.4597C17.5957 12.4067 17.7581 12.1672 17.7097 11.9085C17.6522 11.6329 17.3782 11.4728 17.1137 11.5516C16.8665 11.6322 16.7476 11.8647 16.7903 12.0916Z" fill="#7B7B7B"/>\n' +
					'<path d="M16.7903 14.0916C16.8424 14.343 17.0803 14.5087 17.3415 14.4597C17.5957 14.4067 17.7581 14.1672 17.7097 13.9085C17.6523 13.6336 17.3789 13.4726 17.1137 13.5516C16.8665 13.6322 16.7476 13.8647 16.7903 14.0916Z" fill="#7B7B7B"/>\n' +
					'</svg>\n',
				param: 'Лифты',
				value,
			});

		}

		return {
			keyFeatures,
			characteristics,
		}
	}

	//  -----------------------------------------------------------------------------------
	public static _setPhotos(medias: TEntityMedia[]): TMedia[]
	{
		const photos: TMedia[] = []

		let name = '';
		let url = '';

		if(medias && Array.isArray(medias)) {
			const mediaPhoto = medias.filter(media => media.type === 'commonImage' || media.type === 'mainImage');

			mediaPhoto.sort((mediaA, mediaB) => {
				if(mediaA.isPrimary === mediaB.isPrimary) {
					return mediaB.order - mediaA.order
				} else {
					return Number(mediaB.isPrimary) - Number(mediaA.isPrimary)
				}
			});

			for(let mediaNumber = 0; mediaNumber < mediaPhoto.length; mediaNumber++) {
				const media = mediaPhoto[mediaNumber];
				let width = Math.ceil((842 - 10) / 2);
				let height = Math.ceil((595 - 10) / 2);

				if(mediaNumber < mediaPhoto.length % 4) {
					switch (mediaPhoto.length % 4) {
						case 0:
							break;
						case 1:
							width = 842;
							height = 595;
							break;
						case 2:
							height = 595;
							break;
						case 3:
							if(mediaNumber === 0) {
								height = 595;
							}
							break;
					}
				}

				url = `asis/${media.hash}/w${width}-h${height}-c-rbc.jpg`;
				name = media.description;
				photos.push({name, url});

			}
		}
		return photos;
	}

	//  -----------------------------------------------------------------------------------
	public static _setPrimaryPhoto(medias: TEntityMedia[],  width: number = 0, height: number = 0): TMedia
	{
		let name = '';
		let url = '';
		let currentOrder = -Infinity;
		let currentPrimary = false;
		if(medias && Array.isArray(medias)) {
			for (const media of medias) {
				if (media.type === 'mainImage' && (media.isPrimary > currentPrimary || (media.isPrimary === currentPrimary && media.order > currentOrder))) {
					url = width === 0 || height === 0
						? `asis/${media.hash}/original.jpg`
						: `asis/${media.hash}/w${width}-h${height}-c-rbc.jpg`;
					name = media.description;
					currentOrder = media.order;
					currentPrimary = media.isPrimary;
				}
			}
		}
		return {
			name,
			url,
			width,
			height,
		}
	}

	//  -----------------------------------------------------------------------------------
	public static _setSchemaImage(medias: TEntityMedia[], width: number = 0, height: number = 0): TMedia
	{
		let name = '';
		let url = '';
		if(medias && Array.isArray(medias)) {
			for (const media of medias) {
				if (media.type === 'planImage') {
					url = width === 0 || height === 0
						? `asis/${media.hash}/original.jpg`
						: `asis/${media.hash}/w${width}-h${height}-c-rbc.jpg`;
					name = media.description;
				}
			}
		}
		return {
			name,
			url,
			width,
			height,
		}
	}

	//  -----------------------------------------------------------------------------------
	public static _setAreaCommercial(area: TRealtyObject, offer: TRealtyOffer, isNdsInclude: boolean = false): TArea["areaCommercial"]
	{
		const areaCommercial = {
			isFree: !area.lessee.occupied,
			freeDate: area.lessee.occupiedAt,
			state: area.info.state,
			layout: area.info.spaceLayout,
			operationType: offer.operation,
			purpose: offer.market,
			features: area.info.features.split(', '),
			floor: area.info.floor,
			params: ([
				{
					svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
						'<path d="M15 3L17.3 5.3L14.41 8.17L15.83 9.59L18.7 6.7L21 9V3H15ZM3 9L5.3 6.7L8.17 9.59L9.59 8.17L6.7 5.3L9 3H3V9ZM9 21L6.7 18.7L9.59 15.83L8.17 14.41L5.3 17.3L3 15V21H9ZM21 15L18.7 17.3L15.83 14.41L14.41 15.83L17.3 18.7L15 21H21V15Z" fill="white"/>\n' +
						'</svg>\n',
					name: 'square' as 'floorHeight' | 'power' | 'square',
					value: area.info.squareOffer ? unitFormat({unit: 'м²'})(area.info.squareOffer) : '',
					description: 'площадь',
					position: 0,
				},
				{
					svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
						'<path d="M21 3V5H3V3H21ZM11 10.99V21H13V10.99H16L12 7L8 10.99H11Z" fill="white"/>\n' +
						'</svg>\n',
					name: 'floorHeight' as 'floorHeight' | 'power' | 'square',
					value: area.info.floorsHeight ? unitFormat({unit: 'м'})(area.info.floorsHeight) : '',
					description: 'потолки',
					position: 1,
				},
				{
					svg: '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
						'<path d="M10 3L8 12.9H11L9 21L16 10.2H12L15 3H10Z" fill="white"/>\n' +
						'</svg>\n',
					name: 'power' as 'floorHeight' | 'power' | 'square',
					value: area.info.power ? unitFormat({unit: 'кВт.'})(area.info.power) : '',
					description: 'электрическая мощность',
					position: 2,
				},
			] as TCommercialParam[]).filter(param => param.value).sort((a, b) => a.position - b.position),
			forCustomer: offer.forCustomer,
		}


		// Операция
		let operationType = '';
		switch (areaCommercial.operationType) {
			case "rent":
				operationType = 'Аренда';
				break;
			case "sell":
				operationType = 'Продажа';
				break;
		}

		// Назначение помещения
		let purpose = '';
		switch (areaCommercial.purpose) {
			case 'offices': purpose = 'Офисного помещения'; break;
			case 'warehouses': purpose = 'Складского помещения'; break;
			default: purpose = 'Помещения'; break;
		}

		// Планировка
		let layout = '';
		switch (areaCommercial.layout) {
			case "mixed":
				layout = 'смешанной планировки';
				break;
			case "open":
				layout = 'открытой планировки';
				break;
			case "rooms":
				layout = 'кабинетной планировки';
				break;
		}

		// Фичи
		const areaFeatures = []
		for(const feature of areaCommercial.features) {
			switch (feature){
				case "noWindows": areaFeatures.push('Без окон'); break;
				case "ownEntrance": areaFeatures.push('Отдельный вход'); break;
				case "wholeBuilding": areaFeatures.push('Здание целиком'); break;
				case "noLift": areaFeatures.push('Без лифта'); break;
				case "personalLift": areaFeatures.push('Персональный лифт'); break;
				case "socleFloor": areaFeatures.push('Цокольный этаж'); break;
				case "mansard": areaFeatures.push('Мансарда'); break;
				case "loggia": areaFeatures.push('Лоджия'); break;
			}
		}

		// Состояние
		let state = '';
		switch (areaCommercial.state) {
			case "unknown": state = 'в неизвестном состоянии'; break;
			case "clean": state = 'требуется отделка'; break;
			case "cosmetic": state = 'требуется косметический ремонт'; break;
			case "ready": state = 'готово к въезду'; break;
		}


		// Коммерческие условия
		const terms: TCommercialTerms[] = [];

		if(areaCommercial.forCustomer.depositeValue) {
			const params = [];
			let unit = '';
			switch (areaCommercial.forCustomer.depositeType) {
				case "amount": unit = 'руб.'; break;
				case "month": unit = 'мес.'; break;
				case "percent": unit = '%'; break;
			}
			params.push(`депозит ${unitFormat({unit})(areaCommercial.forCustomer.depositeValue)}`)

			if(areaCommercial.forCustomer.offerContractType && areaCommercial.forCustomer.offerContractType !== 'none') {
				switch (areaCommercial.forCustomer.offerContractType) {
					case "sell": params.push('договор купли-продажи'); break;
					case "directRent": params.push('прямой договор'); break;
					case "subRent": params.push('договор субаренды'); break;
				}
			}

			if(areaCommercial.forCustomer.rentDurationValue) {
				let unitDuration = '';
				switch (areaCommercial.forCustomer.rentDurationType) {
					case "days": unitDuration = 'дней'; break;
					case "months": unitDuration = 'мес.'; break;
					case "years":  unitDuration = areaCommercial.forCustomer.rentDurationValue === 1
						? 'год'
						: (areaCommercial.forCustomer.rentDurationValue < 5
							? 'года' : 'лет'); break;
					case "tillDate": unitDuration = `до ${formattedDate(new Date(areaCommercial.forCustomer.rentDurationValue), '.')}`
				}
				params.push(`срок ${areaCommercial.forCustomer.rentDurationValue} ${unitDuration}`)
			}

			terms.push({
				name: 'Договор и депозит:',
				params,
			})
		}
		terms.push({
			name: 'Тип налогооблажения',
			params: [areaCommercial.forCustomer.taxType === 'usn' ? 'УСН, НДС не облагается' : (isNdsInclude ? 'ОСНО, НДС включен' : 'ОСНО, НДС оплачивается отдельно')],
		})
		if(areaCommercial.forCustomer.priceIncludes && areaCommercial.forCustomer.priceIncludes !== 'none') {
			terms.push({
				name: 'В стоимость включено:',
				params: areaCommercial.forCustomer.priceIncludes.split(', ').map(value => {
					let param: string = ''
					switch((value as TPriceAdditional)) {
						case "operational": param = 'эксплуатационные сборы'; break;
						case "utilities": param = 'коммунальные услуги'; break;
						case "water": param = 'вода'; break;
						case "electricity": param = 'электроэнергия'; break;
						case "security": param = 'охрана'; break;
						case "parking": param = 'парковка'; break;
					}
					return param
				}),
			})
		}
		if(areaCommercial.forCustomer.priceExcludes && areaCommercial.forCustomer.priceExcludes !== 'none') {
			terms.push({
				name: 'Оплачивается отдельно:',
				params: areaCommercial.forCustomer.priceExcludes.split(', ').map(value => {
					let param: string = ''
					switch((value as TPriceAdditional)) {
						case "operational": param = 'эксплуатационные сборы'; break;
						case "utilities": param = 'коммунальные услуги'; break;
						case "water": param = 'вода'; break;
						case "electricity": param = 'электроэнергия'; break;
						case "security": param = 'охрана'; break;
						case "parking": param = 'парковка'; break;
					}
					return param
				}),
			})
		}

		// Расчет цен
		const ndsFactor = (areaCommercial.forCustomer.taxType === 'nds' && isNdsInclude) ? 1.2 : 1;
		const bomaFactor = areaCommercial.operationType === 'rent'
			? (areaCommercial.forCustomer.boma ? areaCommercial.forCustomer.boma : 1)
			: 1;

		const pricePerSquare = areaCommercial.forCustomer.priceMeter * ndsFactor;
		const pricePerMonth = pricePerSquare * area.info.squareOffer / 12 * bomaFactor;
		const priceTotal = areaCommercial.forCustomer.priceMeter * area.info.squareOffer * ndsFactor;

		// Обработка прайм-фото
		const rndName = randomString(8);
		const mainPhotoFile =`/static/img/tmp/a-main-${rndName}.jpg`;
		const processedPhotoFile =`/static/img/tmp/a-mp-${rndName}.jpg`;


		return {
			isNdsInclude,
			operationType,
			purpose,
			layout,
			terms,
			areaFeatures,
			state,
			occupiedState: areaCommercial.isFree ? 'Помещение свободно' : 'Освобождается ' + formattedDate(new Date(areaCommercial.freeDate), '.'),
			floor: areaCommercial.floor ? areaCommercial.floor.toString() : '1',
			params: areaCommercial.params,
			pricePerMonth: unitFormat({unit: ''})(Math.round(pricePerMonth)),
			priceTotal: unitFormat({unit: ''})(Math.round(priceTotal)),
			pricePerSquare: unitFormat({unit: ''})(Math.round(pricePerSquare)),
		}

	}

	//  -----------------------------------------------------------------------------------
	// |
	// | Методы интерфейса IInfoBlockDataRepository, обеспечивающие получение
	// | необходимых инфоблокам данных
	// |
	//  -----------------------------------------------------------------------------------

	// baseHeaderData
	getPresentationName(): string {
		return db?.baseHeaderData.name ? db.baseHeaderData.name : '';
	}
	getBaseLogoLink(): string {
		return db?.baseHeaderData.logoLink ? db.baseHeaderData.logoLink : '';
	}


	getGreyscalePhotoFlag(): boolean {
		return db?.isGreyscalePhotos || false;
	}

	// Building Header
	getBuildingData(building: string): TBuilding {
		return db?.buildings[building];
	}

	// Area Header
	getAreaData(building: string, area: string): TArea {
		return db?.buildings[building].areas[area];
	}

	getBrokerData(): TBrokerData {
		return db?.baseBrokerContacts;
	}
}
